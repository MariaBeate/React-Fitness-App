{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/User/FitnessplanUser.js\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; //import { Button } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\"; //import  Modal  from 'react-bootstrap/Modal';\n//import ModalHeader from 'react-bootstrap/ModalHeader';\n//import ModalBody from 'react-bootstrap/ModalBody';\n//import ModalFooter from 'react-bootstrap/ModalFooter';\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport \"../Fitnessplan.css\";\nexport default class FitnessplanUser extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleEventClick = ({\n      event,\n      el\n    }) => {\n      this.toggle();\n      this.setState({\n        event\n      });\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n        this.setState({\n          // add new event data\n          courses: this.state.courses.concat({\n            // creates a new array\n            title: \"New Event\",\n            start: arg.date,\n            end: \"2020-09-19\",\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n\n    this._deleteCourse = this._deleteCourse.bind(this);\n    this.state = {\n      courses: [],\n      event: {\n        id: \"\",\n        date: \"\",\n        title: \"\",\n        response: {}\n      },\n      calendarWeekends: true,\n      allDay: true,\n      calendarEvents: [// initial event data\n      {\n        name: \"Event Now\",\n        start: new Date()\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/courses\").then(response => response.json()).then(event => {\n      this.setState({\n        courses: event\n      });\n    });\n  }\n\n  _deleteCourse(id) {\n    const {\n      courses\n    } = this.state;\n    fetch(\"http://localhost:9000/api/courses/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      this.setState({\n        courses: courses.filter(event => event.id !== id)\n      });\n      return;\n    }).catch(error => {\n      throw error;\n    }); //    fitness.preventDefault();\n\n    console.log(\"Deleted\");\n  }\n\n  render() {\n    console.log(this.state.event.date);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitnessplan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Kurs bearbeiten\")), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \" Kursname: \", this.state.event.title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 18\n      }\n    }, \" Datum: \", this.state.event.date, \" \"))), /*#__PURE__*/React.createElement(ModalFooter, {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"edit-link\",\n      to: \"/EditCourseDate/\" + this.state.event.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button edit mrg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"button delete mrg\",\n      variant: \"danger\",\n      onClick: () => this._deleteCourse(this.state.event.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"button cancel mrg\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"Kursplan\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Klicke auf ein Datum, um einen neuen Kurs hinzuzuf\\xFCgen\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Ohne Wochenenden\"), \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"create-link\",\n      to: \"/AddCourseDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Add\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitness-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,dayGridWeek,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin] // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\n      // eventContent={this.renderEventContent}\n      // eventDrop={this.handleEventDrop}\n      // eventClick={this.handleEventClick}\n      // select={this.handleDateSelect}\n      //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\n      ,\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends //events={this.state.calendarEvents}\n      ,\n      events: this.state.courses //Funktioniert theoretisch. \n      ,\n      dateClick: this.handleDateClick,\n      onDelete: this.handleDelete,\n      eventClick: this.handleEventClick,\n      height: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    })));\n  }\n  /*  handleDelete = eventId => {\n     const events = this.state.events.filter(e => e.id !== eventId);\n     this.setState({ events });\n     };*/\n\n\n} // handleEventClick = (info) => {\n//   alert('Event: ' + info.event.name);\n// }\n// handleDateClick = (selectInfo) => {\n//   let name = prompt('Please enter a new name for your event')\n//   let calendarApi = selectInfo.view.calendar\n//   //calendarApi.unselect() // clear date selection\n//   if (name) {\n//     calendarApi.addEvent({\n//       id:\"\",\n//       name,\n//       start: selectInfo.startStr,\n//       end: selectInfo.endStr,\n//       allDay: selectInfo.allDay\n//     })\n//   }\n// }\n// renderEventContent(eventInfo) {\n//   return (\n//     <>\n//       <b>{\"hey\"}</b>\n//       <i>{\"hu\"}</i>\n//     </>\n//   )\n// }","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/User/FitnessplanUser.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Link","Button","Modal","ModalHeader","ModalBody","ModalFooter","FitnessplanUser","constructor","props","calendarComponentRef","createRef","toggle","setState","modal","state","handleEventClick","event","el","toggleWeekends","calendarWeekends","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","window","confirm","dateStr","courses","concat","title","start","date","end","allDay","_deleteCourse","bind","id","response","calendarEvents","name","Date","componentDidMount","fetch","then","json","method","headers","Accept","filter","catch","error","console","log","render","left","center","right","handleDelete"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n//import { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n//import  Modal  from 'react-bootstrap/Modal';\n//import ModalHeader from 'react-bootstrap/ModalHeader';\n//import ModalBody from 'react-bootstrap/ModalBody';\n//import ModalFooter from 'react-bootstrap/ModalFooter';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport \"../Fitnessplan.css\";\n\nexport default class FitnessplanUser extends Component {\ncalendarComponentRef = React.createRef();\nconstructor(props) {\nsuper(props);\nthis._deleteCourse = this._deleteCourse.bind(this);\n\nthis.state = {\n    courses: [],\n    event: {\n      id: \"\",\n      date: \"\",\n      title: \"\",\n\n      response: {},\n    },\n    calendarWeekends: true,\n    allDay: true,\n    calendarEvents: [\n      // initial event data\n      { name: \"Event Now\", start: new Date() },\n    ],\n  };\n}\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/courses\")\n      .then((response) => response.json())\n      .then((event) => {\n        this.setState({ courses: event });\n      });\n  }\n\n  _deleteCourse(id) {\n    const { courses } = this.state;\n    fetch(\"http://localhost:9000/api/courses/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(() => {\n        this.setState({\n          courses: courses.filter((event) => event.id !== id),\n        });\n        return;\n      })\n      .catch((error) => {\n        throw error;\n      });\n    //    fitness.preventDefault();\n\n    console.log(\"Deleted\");\n  }\n\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  \n  handleEventClick = ({ event, el }) => {\n    this.toggle();\n    this.setState({ event });\n  };\n\n  \n  \n\n  render() {\n    console.log(this.state.event.date);\n    return (\n      <div className=\"fitnessplan\">\n        <Modal\n              isOpen={this.state.modal}\n              className=\"modal\"\n            >\n              <ModalHeader className=\"modal-header\">\n                \n                <p>Kurs bearbeiten</p>\n              </ModalHeader>\n              <ModalBody className=\"modal-body\">\n                <div>\n                <p> Kursname: {this.state.event.title} </p>\n                 <p> Datum: {this.state.event.date} </p>\n                </div>\n              </ModalBody>\n              <ModalFooter className=\"modal-footer\">\n              <Link className=\"edit-link\" to={\"/EditCourseDate/\" + this.state.event.id}>\n                    <Button className=\"button edit mrg\">Edit</Button>\n              </Link>\n              <Button className=\"button delete mrg\" variant=\"danger\" onClick={() => this._deleteCourse(this.state.event.id)}>\n                    Delete\n                  </Button>\n                <Button className=\"button cancel mrg\" onClick={this.toggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n            \n        <div className=\"heading\">\n        Kursplan\n        <div className=\"heading sub\">\n        Klicke auf ein Datum, um einen neuen Kurs hinzuzufügen\n        </div>\n        <div>\n        <button onClick={this.toggleWeekends} className=\"button add\" >Ohne Wochenenden</button>&nbsp;\n          {/* <button onClick={this.gotoPast}>go to a date in the past</button> */}\n        </div>\n        <div>\n          <Link className=\"create-link\" to={\"/AddCourseDate\"}>\n            <Button className=\"button add\">Add</Button>\n          </Link>\n        </div>\n        </div>\n\n        <div className=\"fitness-calendar\">\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"dayGridMonth,dayGridWeek,listWeek\",\n            }}\n            \n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\n            // eventContent={this.renderEventContent}\n            // eventDrop={this.handleEventDrop}\n            // eventClick={this.handleEventClick}\n            // select={this.handleDateSelect}\n            //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\n            ref={this.calendarComponentRef}\n            weekends={this.state.calendarWeekends}\n            //events={this.state.calendarEvents}\n            events={this.state.courses}    //Funktioniert theoretisch. \n            dateClick={this.handleDateClick}\n            onDelete={this.handleDelete}\n            eventClick = {this.handleEventClick}\n            height='parent'\n          />\n          \n        </div>\n       </div>\n    );\n  }\n\n \n  toggleWeekends = () => {\n    this.setState({\n      // update a property\n      calendarWeekends: !this.state.calendarWeekends,\n    });\n  };\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi();\n    calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n  };\n\n handleDateClick = (arg) => {\n    if (\n      window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\n    ) {\n      this.setState({\n        // add new event data\n        courses: this.state.courses.concat({\n          // creates a new array\n          title: \"New Event\",\n          start: arg.date,\n          end: \"2020-09-19\",\n          allDay: arg.allDay,\n        }),\n      });\n    }\n  }; \n /*  handleDelete = eventId => {\n    const events = this.state.events.filter(e => e.id !== eventId);\n    this.setState({ events });\n    };*/\n} \n\n // handleEventClick = (info) => {\n  //   alert('Event: ' + info.event.name);\n  // }\n\n  // handleDateClick = (selectInfo) => {\n  //   let name = prompt('Please enter a new name for your event')\n  //   let calendarApi = selectInfo.view.calendar\n\n  //   //calendarApi.unselect() // clear date selection\n\n  //   if (name) {\n  //     calendarApi.addEvent({\n  //       id:\"\",\n  //       name,\n  //       start: selectInfo.startStr,\n  //       end: selectInfo.endStr,\n  //       allDay: selectInfo.allDay\n  //     })\n  //   }\n  // }\n\n  // renderEventContent(eventInfo) {\n  //   return (\n  //     <>\n  //       <b>{\"hey\"}</b>\n  //       <i>{\"hu\"}</i>\n  //     </>\n  //   )\n  // }"]},"metadata":{},"sourceType":"module"}