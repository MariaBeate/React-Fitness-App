{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"../Fitnessplan.css\";\nexport default class FitnessplanAdmin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      courseList: [],\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n      {\n        title: \"Event Now\",\n        start: new Date()\n      }]\n    };\n\n    this.handleEventClick = info => {\n      alert('Event: ' + info.event.title);\n    };\n\n    this.handleDateClick = selectInfo => {\n      let title = prompt('Please enter a new title for your event');\n      let calendarApi = selectInfo.view.calendar; //calendarApi.unselect() // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n        this.setState({\n          // add new event data\n          calendarEvents: this.state.calendarEvents.concat({\n            // creates a new array\n            title: \"New Event\",\n            start: arg.date,\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/fitness\").then(response => response.json()).then(fitness => {\n      this.setState({\n        courseList: fitness\n      });\n    });\n  }\n\n  render() {\n    const {\n      courseList\n    } = this.state;\n    console.log(courseList);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitnessplan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Fitnessplan-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"toggle weekends\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.gotoPast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"go to a date in the past\"), \"\\xA0 (also, click a date/time to add an event)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitness-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"timeGridWeek\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      editable: true //change length of event by dragging the event down. Change day of event by dragging\n      ,\n      eventContent: this.renderEventContent,\n      eventDrop: this.handleEventDrop,\n      eventClick: this.handleEventClick,\n      select: this.handleDateSelect //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courseList.title)}}\n      ,\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends //events={this.state.calendarEvents}\n      ,\n      events: courseList //Funktioniert theoretisch. \n      ,\n      dateClick: this.handleDateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  renderEventContent(eventInfo) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"hey\"), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"hu\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","FitnessplanAdmin","calendarComponentRef","createRef","state","courseList","calendarWeekends","calendarEvents","title","start","Date","handleEventClick","info","alert","event","handleDateClick","selectInfo","prompt","calendarApi","view","calendar","addEvent","id","createEventId","startStr","end","endStr","allDay","toggleWeekends","setState","gotoPast","current","getApi","gotoDate","arg","window","confirm","dateStr","concat","date","componentDidMount","fetch","then","response","json","fitness","render","console","log","left","center","right","renderEventContent","handleEventDrop","handleDateSelect","eventInfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"../Fitnessplan.css\";\r\n\r\nexport default class FitnessplanAdmin extends Component {\r\n  calendarComponentRef = React.createRef();\r\n  state = {\r\n    courseList: [],\r\n    calendarWeekends: true,\r\n    calendarEvents: [\r\n      // initial event data\r\n      { title: \"Event Now\", start: new Date() },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/fitness\")\r\n      .then((response) => response.json())\r\n      .then((fitness) => {\r\n        this.setState({ courseList: fitness });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const{ courseList } = this.state;\r\n    console.log(courseList)\r\n    return (\r\n      <div className=\"fitnessplan\">\r\n        <div className=\"Fitnessplan-top\">\r\n          <button onClick={this.toggleWeekends}>toggle weekends</button>&nbsp;\r\n          <button onClick={this.gotoPast}>go to a date in the past</button>\r\n          &nbsp; (also, click a date/time to add an event)\r\n        </div>\r\n        <div className=\"fitness-calendar\">\r\n          <FullCalendar\r\n            defaultView=\"timeGridWeek\"\r\n            header={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n            }}\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            editable={true}  //change length of event by dragging the event down. Change day of event by dragging\r\n            eventContent={this.renderEventContent}\r\n            eventDrop={this.handleEventDrop}\r\n            eventClick={this.handleEventClick}\r\n            select={this.handleDateSelect}\r\n            //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courseList.title)}}\r\n            ref={this.calendarComponentRef}\r\n            weekends={this.state.calendarWeekends}\r\n            //events={this.state.calendarEvents}\r\n            events={courseList}    //Funktioniert theoretisch. \r\n            dateClick={this.handleDateClick}\r\n            \r\n \r\n          />\r\n        </div>\r\n       </div>\r\n    );\r\n  }\r\n\r\n  handleEventClick = (info) => {\r\n    alert('Event: ' + info.event.title);\r\n  }\r\n\r\n  handleDateClick = (selectInfo) => {\r\n    let title = prompt('Please enter a new title for your event')\r\n    let calendarApi = selectInfo.view.calendar\r\n\r\n    //calendarApi.unselect() // clear date selection\r\n\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title,\r\n        start: selectInfo.startStr,\r\n        end: selectInfo.endStr,\r\n        allDay: selectInfo.allDay\r\n      })\r\n    }\r\n  }\r\n\r\n  renderEventContent(eventInfo) {\r\n    return (\r\n      <>\r\n        <b>{\"hey\"}</b>\r\n        <i>{\"hu\"}</i>\r\n      </>\r\n    )\r\n  }\r\n\r\n  toggleWeekends = () => {\r\n    this.setState({\r\n      // update a property\r\n      calendarWeekends: !this.state.calendarWeekends,\r\n    });\r\n  };\r\n\r\n  gotoPast = () => {\r\n    let calendarApi = this.calendarComponentRef.current.getApi();\r\n    calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\r\n  };\r\n\r\n  handleDateClick = (arg) => {\r\n    if (\r\n      window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\r\n    ) {\r\n      this.setState({\r\n        // add new event data\r\n        calendarEvents: this.state.calendarEvents.concat({\r\n          // creates a new array\r\n          title: \"New Event\",\r\n          start: arg.date,\r\n          allDay: arg.allDay,\r\n        }),\r\n      });\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}