{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/EditCourseDate.js\";\nimport React, { Component } from \"react\"; //import Form from \"react-bootstrap/Form\";\n\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\"; //Hier muss nach dem hinzufügen wieder zur FitnessInfo Seite weitergeleitet werden\n\nexport default class EditCourseDate extends Component {\n  constructor(propsss) {\n    super(propss);\n    this.onChangeCourseDate = this.onChangeCourseDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      selectedCourse: \"\",\n      validationError: \"\",\n      courses: [],\n      course: {\n        date: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/courses/\" + this.propss.match.params.id).then(response => response.json()).then(course => this.setState({\n      courses: course\n    }));\n    fetch(\"http://localhost:9000/api/fitness/\").then(response => response.json()).then(data => {\n      let coursesFromApi = data.map(course => {\n        return {\n          value: course.title,\n          display: course.title\n        };\n      });\n      this.setState({\n        courses: [{\n          title: '',\n          display: 'Wähle einen Kurs'\n        }].concat(coursesFromApi)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeCourseDate(e) {\n    this.setState({\n      date: e.target.value\n    });\n  }\n\n  onSubmit() {\n    //e.preventDefault();\n    fetch(\"http://localhost:9000/api/courses/\" + this.propss.match.params.id, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: this.state.date,\n        title: this.state.selectedCourse\n      })\n    }).then(res => res.json()).catch(error => {\n      throw error;\n    });\n    console.log(\"Edited\");\n  } //Hier müssen noch Name, Preis und Beschreibung des zu bearbeitenden fitnesss mitgegeben werden, evtl. über value\n\n\n  render() {\n    // console.log(this.state.hallo);\n    //console.log(this.state.courses);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, \"F\\xFCge einen Kurs hinzu:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"StartDatum\"), this.state.courses.map(course => /*#__PURE__*/React.createElement(\"input\", {\n      key: course.id,\n      type: \"date\",\n      className: \"form-control\",\n      id: \"datum\",\n      defaultValue: course.date,\n      onChange: this.onChangeCourseDate,\n      name: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"selectField\",\n      value: this.state.selectedCourse,\n      onChange: e => this.setState({\n        selectedCourse: e.target.value,\n        validationError: e.target.value === \"\" ? \"Wähle einen Kurs aus\" : \"\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, this.state.courses.map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: course.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, course.display))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, this.state.validationError)), /*#__PURE__*/React.createElement(Link, {\n      to: \"/FitnessPlanAdmin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button add add2\",\n      variant: \"danger\",\n      type: \"submit\",\n      onClick: () => this.onSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Update Kurs\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/EditCourseDate.js"],"names":["React","Component","Button","Link","EditCourseDate","constructor","propsss","propss","onChangeCourseDate","bind","onSubmit","state","selectedCourse","validationError","courses","course","date","componentDidMount","fetch","match","params","id","then","response","json","setState","data","coursesFromApi","map","value","title","display","concat","catch","error","console","log","e","target","method","headers","Accept","body","JSON","stringify","res","render","index","color","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//import Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Hier muss nach dem hinzufügen wieder zur FitnessInfo Seite weitergeleitet werden\r\nexport default class EditCourseDate extends Component {\r\n  constructor(propsss) {\r\n    super(propss);\r\n\r\n    this.onChangeCourseDate = this.onChangeCourseDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      selectedCourse: \"\",\r\n      validationError: \"\",\r\n      courses: [],\r\n      course: {\r\n        date: \"\",\r\n      },\r\n      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/courses/\" + this.propss.match.params.id)\r\n      .then((response) => response.json())\r\n      .then((course) =>\r\n        this.setState({\r\n          courses: course,\r\n        })\r\n      );\r\n \r\n    fetch(\"http://localhost:9000/api/fitness/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let coursesFromApi = data.map((course) => {\r\n          return {value: course.title, display: course.title}\r\n        });\r\n        this.setState({\r\n          courses: [{title: '', display: 'Wähle einen Kurs'}].concat(coursesFromApi)\r\n        });\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChangeCourseDate(e) {\r\n    this.setState({ date: e.target.value });\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    //e.preventDefault();\r\n    fetch(\"http://localhost:9000/api/courses/\" + this.propss.match.params.id, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        date: this.state.date,\r\n        title: this.state.selectedCourse,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n\r\n    console.log(\"Edited\");\r\n  }\r\n\r\n  //Hier müssen noch Name, Preis und Beschreibung des zu bearbeitenden fitnesss mitgegeben werden, evtl. über value\r\n  render() {\r\n    // console.log(this.state.hallo);\r\n    //console.log(this.state.courses);\r\n    return (\r\n      <div className=\"form\">\r\n      <div className=\"heading\">\r\n        Füge einen Kurs hinzu:\r\n      </div>\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"date\">StartDatum</label>\r\n        {this.state.courses.map((course) => (\r\n          <input\r\n            key={course.id}\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            id=\"datum\"\r\n            defaultValue={course.date}\r\n            onChange={this.onChangeCourseDate}\r\n            name=\"date\"\r\n          />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <select className ='selectField'\r\n        value={this.state.selectedCourse}\r\n        onChange={e => this.setState({selectedCourse: e.target.value, validationError: e.target.value === \"\" ? \"Wähle einen Kurs aus\" : \"\"})}\r\n        >\r\n        {this.state.courses.map((course, index) => \r\n        <option \r\n        key={index} value={course.title}>\r\n          {course.display}\r\n        </option>)}\r\n        </select>\r\n      <div style={{color: 'red', marginTop: '5px'}}>\r\n      {this.state.validationError}\r\n     </div>\r\n     </div>\r\n\r\n\r\n        <Link to=\"/FitnessPlanAdmin\">\r\n          <Button\r\n            className=\"button add add2\"\r\n            variant=\"danger\"\r\n            type=\"submit\"\r\n            onClick={() => this.onSubmit()}\r\n          >\r\n            Update Kurs\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}