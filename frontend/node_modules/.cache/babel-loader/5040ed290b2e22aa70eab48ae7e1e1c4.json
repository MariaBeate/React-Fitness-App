{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melan\\\\Desktop\\\\React-Fitness-App\\\\frontend\\\\src\\\\Admin\\\\AddCourseDate.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default class AddCourseDate extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      courses: [],\n      selectedCourse: \"\",\n      validationError: \"\",\n      course: {\n        date: \"\",\n        title: \"\",\n        submitted: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/fitness/\").then(response => response.json()).then(data => {\n      let coursesFromApi = data.map(course => {\n        return {\n          value: course.title,\n          display: course.title\n        };\n      });\n      this.setState({\n        courses: [{\n          title: \"\",\n          display: \"Wähle einen Kurs\"\n        }].concat(coursesFromApi)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.en !== this.props.en) {\n      this.setState({\n        en: this.props.en\n      });\n    }\n  }\n\n  onChangeDate(e) {\n    this.setState({\n      date: e.target.value\n    });\n  }\n\n  handleSubmit() {\n    fetch(\"http://localhost:9000/api/addCourseDate\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: this.state.date,\n        title: this.state.selectedCourse,\n        submitted: true\n      })\n    }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"F\\xFCge einen Kurs hinzu:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"StartDatum\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      id: \"startdatum\",\n      required: true,\n      onChange: this.onChangeDate,\n      name: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"selectField\",\n      value: this.state.selectedCourse,\n      onChange: e => this.setState({\n        selectedCourse: e.target.value,\n        validationError: e.target.value === \"\" ? \"Wähle einen Kurs aus\" : \"\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, this.state.courses.map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: course.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, course.display))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        marginTop: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, this.state.validationError)), /*#__PURE__*/React.createElement(Link, {\n      to: \"/FitnessplanAdmin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      className: \"button add add2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/melan/Desktop/React-Fitness-App/frontend/src/Admin/AddCourseDate.js"],"names":["React","Component","Link","AddCourseDate","constructor","props","onChangeDate","bind","handleSubmit","state","courses","selectedCourse","validationError","course","date","title","submitted","componentDidMount","fetch","then","response","json","data","coursesFromApi","map","value","display","setState","concat","catch","error","console","log","componentDidUpdate","prevProps","en","e","target","method","headers","Accept","body","JSON","stringify","res","err","render","index","color","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class AddCourseDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      courses: [],\r\n      selectedCourse: \"\",\r\n      validationError: \"\",\r\n      course: {\r\n        date: \"\",\r\n        title: \"\",\r\n        submitted: false,\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/fitness/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let coursesFromApi = data.map((course) => {\r\n          return { value: course.title, display: course.title };\r\n        });\r\n        this.setState({\r\n          courses: [{ title: \"\", display: \"Wähle einen Kurs\" }].concat(\r\n            coursesFromApi\r\n          ),\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.en !== this.props.en) {\r\n      this.setState({ en: this.props.en });\r\n    }\r\n  }\r\n\r\n  onChangeDate(e) {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    fetch(\"http://localhost:9000/api/addCourseDate\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        date: this.state.date,\r\n        title: this.state.selectedCourse,\r\n        submitted: true,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form\">\r\n        <div className=\"heading\">Füge einen Kurs hinzu:</div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"date\">StartDatum</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            id=\"startdatum\"\r\n            required\r\n            onChange={this.onChangeDate}\r\n            name=\"date\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <select\r\n            className=\"selectField\"\r\n            value={this.state.selectedCourse}\r\n            onChange={(e) =>\r\n              this.setState({\r\n                selectedCourse: e.target.value,\r\n                validationError:\r\n                  e.target.value === \"\" ? \"Wähle einen Kurs aus\" : \"\",\r\n              })\r\n            }\r\n          >\r\n            {this.state.courses.map((course, index) => (\r\n              <option key={index} value={course.title}>\r\n                {course.display}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <div style={{ color: \"red\", marginTop: \"5px\" }}>\r\n            {this.state.validationError}\r\n          </div>\r\n        </div>\r\n\r\n        <Link to=\"/FitnessplanAdmin\">\r\n          <button onClick={this.handleSubmit} className=\"button add add2\">\r\n            Submit\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}