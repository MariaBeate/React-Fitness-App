{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melan\\\\Desktop\\\\React-Fitness-App\\\\frontend\\\\src\\\\Admin\\\\FitnessplanAdmin.js\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport \"../assets/css/Fitnessplan.css\";\nimport moment from \"moment\";\n\nfunction searchingFor(search) {\n  return function (x) {\n    return x.title.toLowerCase().includes(search.toLowerCase()) || !search;\n  };\n}\n\nexport default class FitnessplanAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleModalClick = () => {\n      this.toggle();\n    };\n\n    this.handleEventClick = ({\n      event\n    }) => {\n      this.toggle();\n      const date = event.start.toISOString().substr(0, 10);\n      this.setState({\n        date: date,\n        title: event.title,\n        id: event.id\n      });\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n        this.setState({\n          // add new event data\n          courses: this.state.courses.concat({\n            // creates a new array\n            title: \"New Event\",\n            start: arg.date,\n            end: \"2020-09-19\",\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n\n    this.deleteCourse = this.deleteCourse.bind(this);\n    this.state = {\n      courses: [],\n      show: null,\n      search: \"\",\n      id: \"\",\n      date: \"\",\n      title: \"\",\n      showModal1: false,\n      en: this.props.en,\n      calendarWeekends: true,\n      centered: false,\n      allDay: true,\n      calendarEvents: [// initial event data\n      {\n        name: \"Event Now\",\n        start: new Date()\n      }]\n    };\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  searchHandler(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/courses\").then(response => response.json()).then(event => {\n      this.setState({\n        courses: event\n      });\n    });\n  }\n\n  loadEvents() {\n    fetch(\"http://localhost:9000/api/courses\").then(response => response.json()).then(events => {\n      this.setState({\n        courses: events\n      });\n    });\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.courses !== this.state.courses) {\n      this.loadEvents();\n    }\n  }\n\n  deleteCourse(id) {\n    fetch(\"http://localhost:9000/api/courses/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      this.setState({\n        courses: this.state.courses.filter(event => event.id !== id)\n      });\n      return;\n    }).catch(error => {\n      throw error;\n    }); //this.loadEvents();\n\n    console.log(\"Deleted\");\n    this.toggle();\n  }\n\n  render() {\n    const {\n      search,\n      courses\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitnessplan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      className: \"modal\",\n      size: \"xl\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Kurs bearbeiten\")), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \" Kursname: \", this.state.title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \" Datum: \", this.state.date, \" \"))), /*#__PURE__*/React.createElement(ModalFooter, {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"edit-link\",\n      to: {\n        pathname: \"/EditCourseDate/\" + this.state.id,\n        state: {//date: this.state.event.date,\n          // name: this.state.event.title,\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button edit mrg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"button delete mrg\",\n      variant: \"danger\",\n      onClick: () => this.deleteCourse(this.state.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"button cancel mrg\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.showModal1,\n      className: \"mondal\",\n      size: \"l\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"Kurs suchen\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchFilter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search\",\n      onChange: this.searchHandler,\n      value: search,\n      placeholder: \"Kurs suchen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pane\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, \"Datum\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, courses.filter(searchingFor(search)).map(course => /*#__PURE__*/React.createElement(\"tr\", {\n      key: course.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, course.title, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }, moment(course.date).format(\"Do MMM YYYY\"), \" \"))))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button add mrg\",\n      onClick: () => this.setState({\n        showModal1: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, \"Kursplan\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, \"Klicke auf ein Datum, um einen neuen Kurs hinzuzuf\\xFCgen\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"Wochenenden ein-/ausblenden\"), \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"create-link\",\n      to: \"/AddCourseDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, \"Kurs hinzuf\\xFCgen\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button add\",\n      onClick: () => this.setState({\n        showModal1: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, \"nach Kurs suchen\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitness-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,dayGridWeek,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin] // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\n      // eventContent={this.renderEventContent}\n      // eventDrop={this.handleEventDrop}\n      // eventClick={this.handleEventClick}\n      // select={this.handleDateSelect}\n      //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\n      ,\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends //events={this.state.calendarEvents}\n      ,\n      events: this.state.courses,\n      dateClick: this.handleDateClick,\n      onDelete: this.handleDelete,\n      eventClick: this.handleEventClick,\n      displayEventTime: false,\n      height: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/melan/Desktop/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Link","Button","Modal","ModalHeader","ModalBody","ModalFooter","moment","searchingFor","search","x","title","toLowerCase","includes","FitnessplanAdmin","constructor","props","calendarComponentRef","createRef","toggle","setState","modal","state","handleModalClick","handleEventClick","event","date","start","toISOString","substr","id","toggleWeekends","calendarWeekends","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","window","confirm","dateStr","courses","concat","end","allDay","deleteCourse","bind","show","showModal1","en","centered","calendarEvents","name","Date","searchHandler","target","value","componentDidMount","fetch","then","response","json","loadEvents","events","componentDidUpdate","prevState","method","headers","Accept","filter","catch","error","console","log","render","pathname","map","course","format","left","center","right","handleDelete"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport \"../assets/css/Fitnessplan.css\";\r\nimport moment from \"moment\";\r\n\r\nfunction searchingFor(search) {\r\n  return function (x) {\r\n    return x.title.toLowerCase().includes(search.toLowerCase()) || !search;\r\n  };\r\n}\r\n\r\nexport default class FitnessplanAdmin extends Component {\r\n  calendarComponentRef = React.createRef();\r\n  constructor(props) {\r\n    super(props);\r\n    this.deleteCourse = this.deleteCourse.bind(this);\r\n\r\n    this.state = {\r\n      courses: [],\r\n      show: null,\r\n      search: \"\",\r\n      id: \"\",\r\n      date: \"\",\r\n      title: \"\",\r\n      showModal1: false,\r\n      en: this.props.en,\r\n\r\n      calendarWeekends: true,\r\n      centered: false,\r\n      allDay: true,\r\n      calendarEvents: [\r\n        // initial event data\r\n        { name: \"Event Now\", start: new Date() },\r\n      ],\r\n    };\r\n    this.searchHandler = this.searchHandler.bind(this);\r\n  }\r\n\r\n  searchHandler(event) {\r\n    this.setState({ search: event.target.value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/courses\")\r\n      .then((response) => response.json())\r\n      .then((event) => {\r\n        this.setState({ courses: event });\r\n      });\r\n  }\r\n\r\n  loadEvents() {\r\n    fetch(\"http://localhost:9000/api/courses\")\r\n      .then((response) => response.json())\r\n      .then((events) => {\r\n        this.setState({ courses: events });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.courses !== this.state.courses) {\r\n      this.loadEvents();\r\n    }\r\n  }\r\n\r\n  deleteCourse(id) {\r\n    fetch(\"http://localhost:9000/api/courses/\" + id, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(() => {\r\n        this.setState({\r\n          courses: this.state.courses.filter((event) => event.id !== id),\r\n        });\r\n        return;\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    //this.loadEvents();\r\n    console.log(\"Deleted\");\r\n    this.toggle();\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  };\r\n\r\n  handleModalClick = () => {\r\n    this.toggle();\r\n  };\r\n\r\n  handleEventClick = ({ event }) => {\r\n    this.toggle();\r\n    const date = event.start.toISOString().substr(0, 10);\r\n    this.setState({ date: date, title: event.title, id: event.id });\r\n  };\r\n\r\n  render() {\r\n    const { search, courses } = this.state;\r\n    return (\r\n      <div className=\"fitnessplan\">\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          className=\"modal\"\r\n          size=\"xl\"\r\n          centered={true}\r\n        >\r\n          <ModalHeader className=\"modal-header\">\r\n            <p>Kurs bearbeiten</p>\r\n          </ModalHeader>\r\n          <ModalBody className=\"modal-body\">\r\n            <div>\r\n              <p> Kursname: {this.state.title} </p>\r\n              <p> Datum: {this.state.date} </p>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter className=\"modal-footer\">\r\n            <Link\r\n              className=\"edit-link\"\r\n              to={{\r\n                pathname: \"/EditCourseDate/\" + this.state.id,\r\n                state: {\r\n                  //date: this.state.event.date,\r\n                  // name: this.state.event.title,\r\n                },\r\n              }}\r\n            >\r\n              <Button className=\"button edit mrg\">Edit</Button>\r\n            </Link>\r\n            <Button\r\n              className=\"button delete mrg\"\r\n              variant=\"danger\"\r\n              onClick={() => this.deleteCourse(this.state.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button className=\"button cancel mrg\" onClick={this.toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.showModal1}\r\n          className=\"mondal\"\r\n          size=\"l\"\r\n          centered={true}\r\n        >\r\n          <ModalHeader className=\"modal-header\">\r\n            <p>Kurs suchen</p>\r\n            <div className=\"searchFilter\">\r\n              <form>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"search\"\r\n                  onChange={this.searchHandler}\r\n                  value={search}\r\n                  placeholder=\"Kurs suchen\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody className=\"modal-body\">\r\n            <div className=\"pane\">\r\n              <table id=\"info\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Datum</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {courses.filter(searchingFor(search)).map((course) => (\r\n                    <tr key={course.id}>\r\n                      <td>{course.title} </td>\r\n                      <td>{moment(course.date).format(\"Do MMM YYYY\")} </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter className=\"modal-footer\">\r\n            <button\r\n              className=\"button add mrg\"\r\n              onClick={() => this.setState({ showModal1: false })}\r\n            >\r\n              Close\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <div className=\"heading\">\r\n          Kursplan\r\n          <div className=\"heading sub\">\r\n            Klicke auf ein Datum, um einen neuen Kurs hinzuzufügen\r\n          </div>\r\n          <div>\r\n            <button onClick={this.toggleWeekends} className=\"button add\">\r\n              Wochenenden ein-/ausblenden\r\n            </button>\r\n            &nbsp;\r\n          </div>\r\n          <div>\r\n            <Link className=\"create-link\" to={\"/AddCourseDate\"}>\r\n              <Button className=\"button add\">Kurs hinzufügen</Button>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"button add\"\r\n              onClick={() => this.setState({ showModal1: true })}\r\n            >\r\n              nach Kurs suchen\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"fitness-calendar\">\r\n          <FullCalendar\r\n            defaultView=\"dayGridMonth\"\r\n            header={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,dayGridWeek,listWeek\",\r\n            }}\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\r\n            // eventContent={this.renderEventContent}\r\n            // eventDrop={this.handleEventDrop}\r\n            // eventClick={this.handleEventClick}\r\n            // select={this.handleDateSelect}\r\n            //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\r\n            ref={this.calendarComponentRef}\r\n            weekends={this.state.calendarWeekends}\r\n            //events={this.state.calendarEvents}\r\n            events={this.state.courses}\r\n            dateClick={this.handleDateClick}\r\n            onDelete={this.handleDelete}\r\n            eventClick={this.handleEventClick}\r\n            displayEventTime={false}\r\n            height=\"parent\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleWeekends = () => {\r\n    this.setState({\r\n      // update a property\r\n      calendarWeekends: !this.state.calendarWeekends,\r\n    });\r\n  };\r\n\r\n  gotoPast = () => {\r\n    let calendarApi = this.calendarComponentRef.current.getApi();\r\n    calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\r\n  };\r\n\r\n  handleDateClick = (arg) => {\r\n    if (\r\n      window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\r\n    ) {\r\n      this.setState({\r\n        // add new event data\r\n        courses: this.state.courses.concat({\r\n          // creates a new array\r\n          title: \"New Event\",\r\n          start: arg.date,\r\n          end: \"2020-09-19\",\r\n          allDay: arg.allDay,\r\n        }),\r\n      });\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}