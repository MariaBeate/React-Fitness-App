{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App-1/frontend/src/Admin/AddCourseDate.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default class AddCourseDate extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      courses: [],\n      selectedCourse: \"\",\n      validationError: \"\",\n      course: {\n        date: \"\",\n        title: \"\",\n        submitted: false,\n        en: this.props.en\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/fitness/\").then(response => response.json()).then(data => {\n      let coursesFromApi = data.map(course => {\n        return {\n          value: course.title,\n          display: course.title\n        };\n      });\n\n      if (!this.state.en) {\n        this.setState({\n          courses: [{\n            title: \"\",\n            display: \"Wähle einen Kurs\"\n          }].concat(coursesFromApi)\n        });\n      } else {\n        this.setState({\n          courses: [{\n            title: \"\",\n            display: \"Select a course\"\n          }].concat(coursesFromApi)\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.en !== this.props.en) {\n      this.setState({\n        en: this.props.en\n      });\n    }\n  }\n\n  onChangeDate(e) {\n    this.setState({\n      date: e.target.value\n    });\n  }\n\n  handleSubmit() {\n    fetch(\"http://localhost:9000/api/addCourseDate\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: this.state.date,\n        title: this.state.selectedCourse,\n        submitted: true\n      })\n    }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n  }\n\n  render() {\n    if (!this.state.en) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \"F\\xFCge einen Kurs hinzu:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, \"Datum\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        id: \"startdatum\",\n        required: true,\n        onChange: this.onChangeDate,\n        name: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"selectField\",\n        value: this.state.selectedCourse,\n        onChange: e => this.setState({\n          selectedCourse: e.target.value,\n          validationError: e.target.value === \"\" ? \"Wähle einen Kurs aus\" : \"\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, this.state.courses.map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: course.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, course.display))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\",\n          marginTop: \"5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, this.state.validationError)), /*#__PURE__*/React.createElement(Link, {\n        to: \"/FitnessplanAdmin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        className: \"button add add2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, \"Hinzuf\\xFCgen\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, \"Add a course:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        id: \"startdatum\",\n        required: true,\n        onChange: this.onChangeDate,\n        name: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"selectField\",\n        value: this.state.selectedCourse,\n        onChange: e => this.setState({\n          selectedCourse: e.target.value,\n          validationError: e.target.value === \"\" ? \"Select a a course\" : \"\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, this.state.courses.map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: course.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, course.display))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\",\n          marginTop: \"5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, this.state.validationError)), /*#__PURE__*/React.createElement(Link, {\n        to: \"/FitnessplanAdmin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        className: \"button add add2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, \"Add\")));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App-1/frontend/src/Admin/AddCourseDate.js"],"names":["React","Component","Link","AddCourseDate","constructor","props","onChangeDate","bind","handleSubmit","state","courses","selectedCourse","validationError","course","date","title","submitted","en","componentDidMount","fetch","then","response","json","data","coursesFromApi","map","value","display","setState","concat","catch","error","console","log","componentDidUpdate","prevProps","e","target","method","headers","Accept","body","JSON","stringify","res","err","render","index","color","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACnDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKE,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,eAAe,EAAE,EAHN;AAIXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,SAAS,EAAE,KAHL;AAINC,QAAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWY;AAJT;AAJG,KAAb;AAWD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,UAAIC,cAAc,GAAGD,IAAI,CAACE,GAAL,CAAUZ,MAAD,IAAY;AACxC,eAAO;AAAEa,UAAAA,KAAK,EAAEb,MAAM,CAACE,KAAhB;AAAuBY,UAAAA,OAAO,EAAEd,MAAM,CAACE;AAAvC,SAAP;AACD,OAFoB,CAArB;;AAGA,UAAI,CAAC,KAAKN,KAAL,CAAWQ,EAAhB,EAAoB;AAClB,aAAKW,QAAL,CAAc;AACZlB,UAAAA,OAAO,EAAE,CAAC;AAAEK,YAAAA,KAAK,EAAE,EAAT;AAAaY,YAAAA,OAAO,EAAE;AAAtB,WAAD,EAA6CE,MAA7C,CACPL,cADO;AADG,SAAd;AAKD,OAND,MAMO;AACL,aAAKI,QAAL,CAAc;AACZlB,UAAAA,OAAO,EAAE,CAAC;AAAEK,YAAAA,KAAK,EAAE,EAAT;AAAaY,YAAAA,OAAO,EAAE;AAAtB,WAAD,EAA4CE,MAA5C,CACPL,cADO;AADG,SAAd;AAKD;AACF,KAnBH,EAoBGM,KApBH,CAoBUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAtBH;AAuBD;;AACDG,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAAClB,EAAV,KAAiB,KAAKZ,KAAL,CAAWY,EAAhC,EAAoC;AAClC,WAAKW,QAAL,CAAc;AAAEX,QAAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWY;AAAjB,OAAd;AACD;AACF;;AAEDX,EAAAA,YAAY,CAAC8B,CAAD,EAAI;AACd,SAAKR,QAAL,CAAc;AACZd,MAAAA,IAAI,EAAEsB,CAAC,CAACC,MAAF,CAASX;AADH,KAAd;AAGD;;AAEDlB,EAAAA,YAAY,GAAG;AACbW,IAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC/CmB,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFsC;AAM/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB7B,QAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IADE;AAEnBC,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,cAFC;AAGnBK,QAAAA,SAAS,EAAE;AAHQ,OAAf;AANyC,KAA5C,CAAL,CAYGI,IAZH,CAYSwB,GAAD,IAASA,GAAG,CAACtB,IAAJ,EAZjB,EAaGF,IAbH,CAaSG,IAAD,IAAUS,OAAO,CAACC,GAAR,CAAYV,IAAZ,CAblB,EAcGO,KAdH,CAcUe,GAAD,IAASb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAdlB;AAeD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKrC,KAAL,CAAWQ,EAAhB,EAAoB;AAClB,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,EAAE,EAAC,YAHL;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,QAAQ,EAAE,KAAKX,YALjB;AAME,QAAA,IAAI,EAAC,MANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,cAFpB;AAGE,QAAA,QAAQ,EAAGyB,CAAD,IACR,KAAKR,QAAL,CAAc;AACZjB,UAAAA,cAAc,EAAEyB,CAAC,CAACC,MAAF,CAASX,KADb;AAEZd,UAAAA,eAAe,EACbwB,CAAC,CAACC,MAAF,CAASX,KAAT,KAAmB,EAAnB,GAAwB,sBAAxB,GAAiD;AAHvC,SAAd,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWG,KAAKjB,KAAL,CAAWC,OAAX,CAAmBe,GAAnB,CAAuB,CAACZ,MAAD,EAASkC,KAAT,kBACtB;AAAQ,QAAA,GAAG,EAAEA,KAAb;AAAoB,QAAA,KAAK,EAAElC,MAAM,CAACE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,MAAM,CAACc,OADV,CADD,CAXH,CADF,eAkBE;AAAK,QAAA,KAAK,EAAE;AAAEqB,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,SAAS,EAAE;AAA3B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKxC,KAAL,CAAWG,eADd,CAlBF,CAbF,eAoCE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAE,KAAKJ,YAAtB;AAAoC,QAAA,SAAS,EAAC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CApCF,CADF;AA4CD,KA7CD,MA6CO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,EAAE,EAAC,YAHL;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,QAAQ,EAAE,KAAKF,YALjB;AAME,QAAA,IAAI,EAAC,MANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,cAFpB;AAGE,QAAA,QAAQ,EAAGyB,CAAD,IACR,KAAKR,QAAL,CAAc;AACZjB,UAAAA,cAAc,EAAEyB,CAAC,CAACC,MAAF,CAASX,KADb;AAEZd,UAAAA,eAAe,EACbwB,CAAC,CAACC,MAAF,CAASX,KAAT,KAAmB,EAAnB,GAAwB,mBAAxB,GAA8C;AAHpC,SAAd,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWG,KAAKjB,KAAL,CAAWC,OAAX,CAAmBe,GAAnB,CAAuB,CAACZ,MAAD,EAASkC,KAAT,kBACtB;AAAQ,QAAA,GAAG,EAAEA,KAAb;AAAoB,QAAA,KAAK,EAAElC,MAAM,CAACE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,MAAM,CAACc,OADV,CADD,CAXH,CADF,eAkBE;AAAK,QAAA,KAAK,EAAE;AAAEqB,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,SAAS,EAAE;AAA3B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKxC,KAAL,CAAWG,eADd,CAlBF,CAbF,eAoCE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAE,KAAKJ,YAAtB;AAAoC,QAAA,SAAS,EAAC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CApCF,CADF;AA4CD;AACF;;AArKkD","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class AddCourseDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      courses: [],\r\n      selectedCourse: \"\",\r\n      validationError: \"\",\r\n      course: {\r\n        date: \"\",\r\n        title: \"\",\r\n        submitted: false,\r\n        en: this.props.en,\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/fitness/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let coursesFromApi = data.map((course) => {\r\n          return { value: course.title, display: course.title };\r\n        });\r\n        if (!this.state.en) {\r\n          this.setState({\r\n            courses: [{ title: \"\", display: \"Wähle einen Kurs\" }].concat(\r\n              coursesFromApi\r\n            ),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            courses: [{ title: \"\", display: \"Select a course\" }].concat(\r\n              coursesFromApi\r\n            ),\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.en !== this.props.en) {\r\n      this.setState({ en: this.props.en });\r\n    }\r\n  }\r\n\r\n  onChangeDate(e) {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    fetch(\"http://localhost:9000/api/addCourseDate\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        date: this.state.date,\r\n        title: this.state.selectedCourse,\r\n        submitted: true,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.en) {\r\n      return (\r\n        <div className=\"form\">\r\n          <div className=\"heading\">Füge einen Kurs hinzu:</div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date\">Datum</label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"startdatum\"\r\n              required\r\n              onChange={this.onChangeDate}\r\n              name=\"date\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <select\r\n              className=\"selectField\"\r\n              value={this.state.selectedCourse}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  selectedCourse: e.target.value,\r\n                  validationError:\r\n                    e.target.value === \"\" ? \"Wähle einen Kurs aus\" : \"\",\r\n                })\r\n              }\r\n            >\r\n              {this.state.courses.map((course, index) => (\r\n                <option key={index} value={course.title}>\r\n                  {course.display}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div style={{ color: \"red\", marginTop: \"5px\" }}>\r\n              {this.state.validationError}\r\n            </div>\r\n          </div>\r\n\r\n          <Link to=\"/FitnessplanAdmin\">\r\n            <button onClick={this.handleSubmit} className=\"button add add2\">\r\n              Hinzufügen\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"form\">\r\n          <div className=\"heading\">Add a course:</div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date\">Date</label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"startdatum\"\r\n              required\r\n              onChange={this.onChangeDate}\r\n              name=\"date\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <select\r\n              className=\"selectField\"\r\n              value={this.state.selectedCourse}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  selectedCourse: e.target.value,\r\n                  validationError:\r\n                    e.target.value === \"\" ? \"Select a a course\" : \"\",\r\n                })\r\n              }\r\n            >\r\n              {this.state.courses.map((course, index) => (\r\n                <option key={index} value={course.title}>\r\n                  {course.display}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div style={{ color: \"red\", marginTop: \"5px\" }}>\r\n              {this.state.validationError}\r\n            </div>\r\n          </div>\r\n\r\n          <Link to=\"/FitnessplanAdmin\">\r\n            <button onClick={this.handleSubmit} className=\"button add add2\">\r\n              Add\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}