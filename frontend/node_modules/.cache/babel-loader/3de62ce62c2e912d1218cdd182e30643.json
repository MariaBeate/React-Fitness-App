{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; //import { Button } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\"; //import  Modal  from 'react-bootstrap/Modal';\n//import ModalHeader from 'react-bootstrap/ModalHeader';\n//import ModalBody from 'react-bootstrap/ModalBody';\n//import ModalFooter from 'react-bootstrap/ModalFooter';\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport \"../Fitnessplan.css\";\nexport default class FitnessplanAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleEventClick = ({\n      event,\n      el\n    }) => {\n      this.toggle();\n      this.setState({\n        event\n      });\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n        this.setState({\n          // add new event data\n          courses: this.state.courses.concat({\n            // creates a new array\n            title: \"New Event\",\n            start: arg.date,\n            end: \"2020-09-19\",\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n\n    this._deleteCourse = this._deleteCourse.bind(this);\n    this.state = {\n      courses: [],\n      event: {\n        id: \"\",\n        title: \"\",\n        date: \"\",\n        response: {}\n      },\n      calendarWeekends: true,\n      allDay: true,\n      calendarEvents: [// initial event data\n      {\n        name: \"Event Now\",\n        start: new Date()\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/courses\").then(response => response.json()).then(event => {\n      this.setState({\n        courses: event\n      });\n    });\n  }\n\n  _deleteCourse(id) {\n    const {\n      courses\n    } = this.state;\n    fetch(\"http://localhost:9000/api/courses/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      this.setState({\n        courses: courses.filter(event => event.id !== id)\n      });\n      return;\n    }).catch(error => {\n      throw error;\n    }); //    fitness.preventDefault();\n\n    console.log(\"Deleted\");\n  }\n\n  render() {\n    const {\n      courses\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitnessplan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Kursplan\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Klicke auf ein Datum, um einen neuen Kurs hinzuzuf\\xFCgen\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Ohne Wochenenden\"), \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"create-link\",\n      to: \"/AddCourseDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Add\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitness-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      eventClick: function (arg) {\n        alert( /*#__PURE__*/React.createElement(Button, {\n          className: \"button loesch\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }\n        }, \"L\\xF6schen\"));\n      },\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,dayGridWeek,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin] // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\n      // eventContent={this.renderEventContent}\n      // eventDrop={this.handleEventDrop}\n      // eventClick={this.handleEventClick}\n      // select={this.handleDateSelect}\n      //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\n      ,\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends //events={this.state.calendarEvents}\n      ,\n      events: this.state.courses //Funktioniert theoretisch. \n      ,\n      dateClick: this.handleDateClick,\n      onDelete: this.handleDelete,\n      eventClick: this.handleEventClick,\n      height: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Kursname:\", this.state.event.title), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Datum: \", this.state.event.date, \"ID: \", this.state.event.id)), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"edit-link\",\n      to: \"/EditCourseDate/\" + event.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"button delete\",\n      variant: \"danger\",\n      onClick: () => this._deleteCourse(this.state.event.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, \"Cancel\")))));\n  }\n  /*  handleDelete = eventId => {\r\n     const events = this.state.events.filter(e => e.id !== eventId);\r\n     this.setState({ events });\r\n     };*/\n\n\n} // handleEventClick = (info) => {\n//   alert('Event: ' + info.event.name);\n// }\n// handleDateClick = (selectInfo) => {\n//   let name = prompt('Please enter a new name for your event')\n//   let calendarApi = selectInfo.view.calendar\n//   //calendarApi.unselect() // clear date selection\n//   if (name) {\n//     calendarApi.addEvent({\n//       id:\"\",\n//       name,\n//       start: selectInfo.startStr,\n//       end: selectInfo.endStr,\n//       allDay: selectInfo.allDay\n//     })\n//   }\n// }\n// renderEventContent(eventInfo) {\n//   return (\n//     <>\n//       <b>{\"hey\"}</b>\n//       <i>{\"hu\"}</i>\n//     </>\n//   )\n// }","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Link","Button","Modal","ModalHeader","ModalBody","ModalFooter","FitnessplanAdmin","constructor","props","calendarComponentRef","createRef","toggle","setState","modal","state","handleEventClick","event","el","toggleWeekends","calendarWeekends","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","window","confirm","dateStr","courses","concat","title","start","date","end","allDay","_deleteCourse","bind","id","response","calendarEvents","name","Date","componentDidMount","fetch","then","json","method","headers","Accept","filter","catch","error","console","log","render","alert","left","center","right","handleDelete"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n//import { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n//import  Modal  from 'react-bootstrap/Modal';\r\n//import ModalHeader from 'react-bootstrap/ModalHeader';\r\n//import ModalBody from 'react-bootstrap/ModalBody';\r\n//import ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport \"../Fitnessplan.css\";\r\n\r\nexport default class FitnessplanAdmin extends Component {\r\ncalendarComponentRef = React.createRef();\r\nconstructor(props) {\r\nsuper(props);\r\nthis._deleteCourse = this._deleteCourse.bind(this);\r\n\r\nthis.state = {\r\n    courses: [],\r\n    event: {\r\n      id: \"\",\r\n      title: \"\",\r\n      date:\"\",\r\n\r\n      response: {},\r\n    },\r\n    calendarWeekends: true,\r\n    allDay: true,\r\n    calendarEvents: [\r\n      // initial event data\r\n      { name: \"Event Now\", start: new Date() },\r\n    ],\r\n  };\r\n}\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/courses\")\r\n      .then((response) => response.json())\r\n      .then((event) => {\r\n        this.setState({ courses: event });\r\n      });\r\n  }\r\n\r\n  _deleteCourse(id) {\r\n    const { courses } = this.state;\r\n    fetch(\"http://localhost:9000/api/courses/\" + id, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(() => {\r\n        this.setState({\r\n          courses: courses.filter((event) => event.id !== id),\r\n        });\r\n        return;\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    //    fitness.preventDefault();\r\n\r\n    console.log(\"Deleted\");\r\n  }\r\n\r\n\r\n  toggle = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  };\r\n  \r\n  handleEventClick = ({ event, el }) => {\r\n    this.toggle();\r\n    this.setState({ event });\r\n  };\r\n  \r\n\r\n  render() {\r\n    const{ courses } = this.state;\r\n    return (\r\n      <div className=\"fitnessplan\">\r\n        <div className=\"heading\">\r\n        Kursplan\r\n        <div className=\"heading sub\">\r\n        Klicke auf ein Datum, um einen neuen Kurs hinzuzufügen\r\n        </div>\r\n        <div>\r\n        <button onClick={this.toggleWeekends} className=\"button add\" >Ohne Wochenenden</button>&nbsp;\r\n          {/* <button onClick={this.gotoPast}>go to a date in the past</button> */}\r\n        </div>\r\n        <div>\r\n          <Link className=\"create-link\" to={\"/AddCourseDate\"}>\r\n            <Button className=\"button add\">Add</Button>\r\n          </Link>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"fitness-calendar\">\r\n          <FullCalendar\r\n            defaultView=\"dayGridMonth\"\r\n            eventClick={\r\n              function(arg){\r\n                alert(\r\n                  <Button className=\"button loesch\">Löschen</Button>,\r\n                );\r\n              }\r\n            }\r\n            header={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,dayGridWeek,listWeek\",\r\n            }}\r\n            \r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\r\n            // eventContent={this.renderEventContent}\r\n            // eventDrop={this.handleEventDrop}\r\n            // eventClick={this.handleEventClick}\r\n            // select={this.handleDateSelect}\r\n            //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\r\n            ref={this.calendarComponentRef}\r\n            weekends={this.state.calendarWeekends}\r\n            //events={this.state.calendarEvents}\r\n            events={this.state.courses}    //Funktioniert theoretisch. \r\n            dateClick={this.handleDateClick}\r\n            onDelete={this.handleDelete}\r\n            eventClick = {this.handleEventClick}\r\n            height='parent'\r\n          />\r\n          <Modal\r\n              isOpen={this.state.modal}\r\n              toggle={this.toggle}\r\n            >\r\n              <ModalHeader toggle={this.toggle}>\r\n                \r\n                Kursname:{this.state.event.title}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <div>\r\n                  Datum: {this.state.event.date}\r\n                  ID: {this.state.event.id}\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n              <Link className=\"edit-link\" to={\"/EditCourseDate/\" + event.id}>\r\n                    <Button className=\"button edit\">Edit</Button>\r\n              </Link>\r\n              <Button className=\"button delete\" variant=\"danger\" onClick={() => this._deleteCourse(this.state.event.id)}>\r\n                    Delete\r\n                  </Button>\r\n                <Button color=\"secondary\" onClick={this.toggle}>\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n       </div>\r\n    );\r\n  }\r\n\r\n \r\n  toggleWeekends = () => {\r\n    this.setState({\r\n      // update a property\r\n      calendarWeekends: !this.state.calendarWeekends,\r\n    });\r\n  };\r\n\r\n  gotoPast = () => {\r\n    let calendarApi = this.calendarComponentRef.current.getApi();\r\n    calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\r\n  };\r\n\r\n handleDateClick = (arg) => {\r\n    if (\r\n      window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\r\n    ) {\r\n      this.setState({\r\n        // add new event data\r\n        courses: this.state.courses.concat({\r\n          // creates a new array\r\n          title: \"New Event\",\r\n          start: arg.date,\r\n          end: \"2020-09-19\",\r\n          allDay: arg.allDay,\r\n        }),\r\n      });\r\n    }\r\n  }; \r\n /*  handleDelete = eventId => {\r\n    const events = this.state.events.filter(e => e.id !== eventId);\r\n    this.setState({ events });\r\n    };*/\r\n} \r\n\r\n // handleEventClick = (info) => {\r\n  //   alert('Event: ' + info.event.name);\r\n  // }\r\n\r\n  // handleDateClick = (selectInfo) => {\r\n  //   let name = prompt('Please enter a new name for your event')\r\n  //   let calendarApi = selectInfo.view.calendar\r\n\r\n  //   //calendarApi.unselect() // clear date selection\r\n\r\n  //   if (name) {\r\n  //     calendarApi.addEvent({\r\n  //       id:\"\",\r\n  //       name,\r\n  //       start: selectInfo.startStr,\r\n  //       end: selectInfo.endStr,\r\n  //       allDay: selectInfo.allDay\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // renderEventContent(eventInfo) {\r\n  //   return (\r\n  //     <>\r\n  //       <b>{\"hey\"}</b>\r\n  //       <i>{\"hu\"}</i>\r\n  //     </>\r\n  //   )\r\n  // }"]},"metadata":{},"sourceType":"module"}