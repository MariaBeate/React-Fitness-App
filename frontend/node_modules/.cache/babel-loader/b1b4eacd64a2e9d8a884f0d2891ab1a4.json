{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../Fitnessplan.css\";\nexport default class FitnessplanAdmin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      modal: false,\n      courses: [],\n      course: {\n        title: \"\",\n        date: \"\",\n        price: \"\",\n        description: \"\"\n      },\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n      {\n        name: \"Event Now\",\n        start: new Date()\n      }]\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleEventClick = ({\n      event,\n      el\n    }) => {\n      this.toggle();\n      this.setState({\n        event\n      });\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n        this.setState({\n          // add new event data\n          courses: this.state.courses.concat({\n            // creates a new array\n            title: \"New Event\",\n            start: arg.date,\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/fitness\").then(response => response.json()).then(course => {\n      this.setState({\n        courses: course\n      });\n    });\n  }\n\n  render() {\n    const {\n      courses\n    } = this.state;\n    console.log(courses);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitnessplan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Kursplan\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Klicke auf ein Datum, um einen neuen Kurs hinzuzuf\\xFCgen\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Ohne Wochenenden\"), \"\\xA0\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitness-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"timeGridWeek\",\n      eventClick: function (arg) {\n        alert('Button einfÃ¼gen');\n      },\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n      },\n      selectable: true,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin] // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\n      // eventContent={this.renderEventContent}\n      // eventDrop={this.handleEventDrop}\n      // eventClick={this.handleEventClick}\n      // select={this.handleDateSelect}\n      //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\n      ,\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends //events={this.state.calendarEvents}\n      ,\n      events: this.state.courses //Funktioniert theoretisch. \n      ,\n      dateClick: this.handleDateClick,\n      eventRender: this.handleEventRender,\n      eventClick: this.handleEventClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })));\n  } // handleEventClick = (info) => {\n  //   alert('Event: ' + info.event.name);\n  // }\n  // handleDateClick = (selectInfo) => {\n  //   let name = prompt('Please enter a new name for your event')\n  //   let calendarApi = selectInfo.view.calendar\n  //   //calendarApi.unselect() // clear date selection\n  //   if (name) {\n  //     calendarApi.addEvent({\n  //       id:\"\",\n  //       name,\n  //       start: selectInfo.startStr,\n  //       end: selectInfo.endStr,\n  //       allDay: selectInfo.allDay\n  //     })\n  //   }\n  // }\n  // renderEventContent(eventInfo) {\n  //   return (\n  //     <>\n  //       <b>{\"hey\"}</b>\n  //       <i>{\"hu\"}</i>\n  //     </>\n  //   )\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Button","Link","FitnessplanAdmin","calendarComponentRef","createRef","state","modal","courses","course","title","date","price","description","calendarWeekends","calendarEvents","name","start","Date","toggle","setState","handleEventClick","event","el","toggleWeekends","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","window","confirm","dateStr","concat","allDay","componentDidMount","fetch","then","response","json","render","console","log","alert","left","center","right","handleEventRender"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Fitnessplan.css\";\r\n\r\nexport default class FitnessplanAdmin extends Component {\r\n  calendarComponentRef = React.createRef();\r\n  state = {\r\n    modal: false,\r\n    courses: [],\r\n    course: {\r\n      title: \"\",\r\n      date:\"\",\r\n      price:\"\",\r\n      description:\"\",\r\n    },\r\n    \r\n    calendarWeekends: true,\r\n    calendarEvents: [\r\n      // initial event data\r\n      { name: \"Event Now\", start: new Date() },\r\n    ],\r\n  };\r\n  \r\n  toggle = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  };\r\n\r\n  handleEventClick = ({ event, el }) => {\r\n    this.toggle();\r\n    this.setState({ event });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/fitness\")\r\n      .then((response) => response.json())\r\n      .then((course) => {\r\n        this.setState({ courses: course });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const{ courses } = this.state;\r\n    console.log(courses)\r\n    return (\r\n      <div className=\"fitnessplan\">\r\n        <div className=\"heading\">\r\n        Kursplan\r\n        <div className=\"heading sub\">\r\n        Klicke auf ein Datum, um einen neuen Kurs hinzuzufÃ¼gen\r\n        </div>\r\n        <div>\r\n        <button onClick={this.toggleWeekends} className=\"button add\" >Ohne Wochenenden</button>&nbsp;\r\n          {/* <button onClick={this.gotoPast}>go to a date in the past</button> */}\r\n        </div>\r\n        </div>\r\n        <div className=\"fitness-calendar\">\r\n          <FullCalendar\r\n            defaultView=\"timeGridWeek\"\r\n            eventClick={\r\n              function(arg){\r\n                alert(\r\n                  'Button einfÃ¼gen',\r\n                );\r\n              }\r\n            }\r\n            header={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n            }}\r\n            selectable={true}\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\r\n            // eventContent={this.renderEventContent}\r\n            // eventDrop={this.handleEventDrop}\r\n            // eventClick={this.handleEventClick}\r\n            // select={this.handleDateSelect}\r\n            //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\r\n            ref={this.calendarComponentRef}\r\n            weekends={this.state.calendarWeekends}\r\n            //events={this.state.calendarEvents}\r\n            events={this.state.courses}    //Funktioniert theoretisch. \r\n            dateClick={this.handleDateClick}\r\n            eventRender={this.handleEventRender}\r\n            eventClick={this.handleEventClick}\r\n            \r\n \r\n          />\r\n        </div>\r\n       </div>\r\n    );\r\n  }\r\n\r\n  // handleEventClick = (info) => {\r\n  //   alert('Event: ' + info.event.name);\r\n  // }\r\n\r\n  // handleDateClick = (selectInfo) => {\r\n  //   let name = prompt('Please enter a new name for your event')\r\n  //   let calendarApi = selectInfo.view.calendar\r\n\r\n  //   //calendarApi.unselect() // clear date selection\r\n\r\n  //   if (name) {\r\n  //     calendarApi.addEvent({\r\n  //       id:\"\",\r\n  //       name,\r\n  //       start: selectInfo.startStr,\r\n  //       end: selectInfo.endStr,\r\n  //       allDay: selectInfo.allDay\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // renderEventContent(eventInfo) {\r\n  //   return (\r\n  //     <>\r\n  //       <b>{\"hey\"}</b>\r\n  //       <i>{\"hu\"}</i>\r\n  //     </>\r\n  //   )\r\n  // }\r\n  \r\n\r\n  toggleWeekends = () => {\r\n    this.setState({\r\n      // update a property\r\n      calendarWeekends: !this.state.calendarWeekends,\r\n    });\r\n  };\r\n\r\n  gotoPast = () => {\r\n    let calendarApi = this.calendarComponentRef.current.getApi();\r\n    calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\r\n  };\r\n\r\n handleDateClick = (arg) => {\r\n    if (\r\n      window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\r\n    ) {\r\n      this.setState({\r\n        // add new event data\r\n        courses: this.state.courses.concat({\r\n          // creates a new array\r\n          title: \"New Event\",\r\n          start: arg.date,\r\n          allDay: arg.allDay,\r\n        }),\r\n      });\r\n    }\r\n  }; \r\n}\r\n"]},"metadata":{},"sourceType":"module"}