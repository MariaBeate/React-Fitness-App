{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Fitnessplan.js\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./Fitnessplan.css\";\nexport default class Fitnessplan extends Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      courseList: [],\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n      {\n        title: \"Event Now\",\n        start: new Date()\n      }],\n      fitness: {\n        date: \"\",\n        name: \"\",\n        price: null,\n        description: \"\"\n      }\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n        this.setState({\n          // add new event data\n          calendarEvents: this.state.calendarEvents.concat({\n            // creates a new array\n            title: \"New Event\",\n            start: arg.date,\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/fitness/\" + this.props.match.params.id).then(response => response.json()).then(fitness => this.setState({\n      currentCourse: fitness\n    }));\n  } // componentDidMount() {\n  //   fetch(\"http://localhost:9000/api/fitness\")\n  //     .then((response) => response.json())\n  //     .then((fitness) => {\n  //       this.setState({ courseList: fitness });\n  //     });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitnessplan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Fitnessplan-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"toggle weekends\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.gotoPast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"go to a date in the past\"), \"\\xA0 (also, click a date/time to add an event)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitness-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"timeGridWeek\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      eventContent: this.renderEventContent,\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: this.state.calendarEvents,\n      dateClick: this.handleDateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  renderEventContent(eventInfo) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"hey\"), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"hu\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Fitnessplan.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Fitnessplan","calendarComponentRef","createRef","state","courseList","calendarWeekends","calendarEvents","title","start","Date","fitness","date","name","price","description","toggleWeekends","setState","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","window","confirm","dateStr","concat","allDay","componentDidMount","fetch","props","match","params","id","then","response","json","currentCourse","render","left","center","right","renderEventContent","eventInfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"./Fitnessplan.css\";\r\n\r\nexport default class Fitnessplan extends Component {\r\n  calendarComponentRef = React.createRef();\r\n  state = {\r\n    courseList: [],\r\n    calendarWeekends: true,\r\n    calendarEvents: [\r\n      // initial event data\r\n      { title: \"Event Now\", start: new Date() },\r\n    ],\r\n    fitness: {\r\n      date:\"\",\r\n      name: \"\",\r\n      price: null,\r\n      description: \"\",\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/fitness/\" + this.props.match.params.id)\r\n      .then((response) => response.json())\r\n      .then((fitness) =>\r\n        this.setState({\r\n          currentCourse: fitness,\r\n        })\r\n      );\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   fetch(\"http://localhost:9000/api/fitness\")\r\n  //     .then((response) => response.json())\r\n  //     .then((fitness) => {\r\n  //       this.setState({ courseList: fitness });\r\n  //     });\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fitnessplan\">\r\n        <div className=\"Fitnessplan-top\">\r\n          <button onClick={this.toggleWeekends}>toggle weekends</button>&nbsp;\r\n          <button onClick={this.gotoPast}>go to a date in the past</button>\r\n          &nbsp; (also, click a date/time to add an event)\r\n        </div>\r\n        <div className=\"fitness-calendar\">\r\n          <FullCalendar\r\n            defaultView=\"timeGridWeek\"\r\n            header={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n            }}\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            eventContent={this.renderEventContent}\r\n            ref={this.calendarComponentRef}\r\n            weekends={this.state.calendarWeekends}\r\n            events={this.state.calendarEvents}\r\n            dateClick={this.handleDateClick}\r\n \r\n          />\r\n        </div>\r\n       </div>\r\n    );\r\n  }\r\n\r\n  renderEventContent(eventInfo) {\r\n    return (\r\n      <>\r\n        <b>{\"hey\"}</b>\r\n        <i>{\"hu\"}</i>\r\n      </>\r\n    )\r\n  }\r\n\r\n  toggleWeekends = () => {\r\n    this.setState({\r\n      // update a property\r\n      calendarWeekends: !this.state.calendarWeekends,\r\n    });\r\n  };\r\n\r\n  gotoPast = () => {\r\n    let calendarApi = this.calendarComponentRef.current.getApi();\r\n    calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\r\n  };\r\n\r\n  handleDateClick = (arg) => {\r\n    if (\r\n      window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\r\n    ) {\r\n      this.setState({\r\n        // add new event data\r\n        calendarEvents: this.state.calendarEvents.concat({\r\n          // creates a new array\r\n          title: \"New Event\",\r\n          start: arg.date,\r\n          allDay: arg.allDay,\r\n        }),\r\n      });\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}