{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/AddCourseDate.js\";\nimport React, { Component } from \"react\"; //import { Table, Button, Alert } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\"; //Hier muss nach dem hinzufügen wieder zur FitnessInfo Seite weitergeleitet werden\n\nexport default class AddCourseDate extends Component {\n  constructor(props) {\n    super(props); // this.onChangeDate = this.onChangeDate.bind(this);\n\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      courses: [],\n      selectedCourse: \"\",\n      validationError: \"\",\n      course: {\n        date: \"\",\n        courseid: null,\n        submitted: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/fitness/\").then(response => response.json()).then(data => {\n      let coursesFromApi = data.map(course => {\n        return {\n          value: course.title,\n          display: course.title\n        };\n      });\n      this.setState({\n        courses: [{\n          title: '',\n          display: 'Wähle einen Kurs'\n        }].concat(coursesFromApi)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeDate(e) {\n    this.setState({\n      date: e.target.value\n    });\n  }\n\n  handleSubmit() {\n    fetch(\"http://localhost:9000/api/addCourseDate\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: this.state.date,\n        title: this.state.title,\n        submitted: true\n      })\n    }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, \"F\\xFCge einen Kurs hinzu:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"StartDatum\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      id: \"startdatum\",\n      required: true //value={this.state.name}\n      ,\n      onChange: this.onChangeDate,\n      name: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"selectField\",\n      value: this.state.selectedCourse,\n      onChange: e => this.setState({\n        selectedCourse: e.target.value,\n        validationError: e.target.value === \"\" ? \"Wähle einen Kurs aus\" : \"\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, this.state.courses.map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: course.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, course.display))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, this.state.validationError)), /*#__PURE__*/React.createElement(Link, {\n      to: \"/FitnessplanAdmin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      className: \"button add add2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/AddCourseDate.js"],"names":["React","Component","Link","AddCourseDate","constructor","props","onChangeDate","bind","handleSubmit","state","courses","selectedCourse","validationError","course","date","courseid","submitted","componentDidMount","fetch","then","response","json","data","coursesFromApi","map","value","title","display","setState","concat","catch","error","console","log","e","target","method","headers","Accept","body","JSON","stringify","res","err","render","index","color","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//import { Table, Button, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Hier muss nach dem hinzufügen wieder zur FitnessInfo Seite weitergeleitet werden\r\nexport default class AddCourseDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n    this.state = {\r\n      courses: [],\r\n      selectedCourse: \"\",\r\n      validationError: \"\",\r\n      course: {\r\n        date: \"\",\r\n        courseid: null,\r\n        submitted: false,\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/fitness/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let coursesFromApi = data.map((course) => {\r\n          return {value: course.title, display: course.title}\r\n        });\r\n        this.setState({\r\n          courses: [{title: '', display: 'Wähle einen Kurs'}].concat(coursesFromApi)\r\n        });\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChangeDate(e) {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  }\r\n  \r\n  handleSubmit() {\r\n    fetch(\"http://localhost:9000/api/addCourseDate\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        date: this.state.date,\r\n        title: this.state.title,\r\n        submitted: true,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form\">\r\n      <div className=\"heading\">\r\n        Füge einen Kurs hinzu:\r\n      </div>\r\n          <div className=\"form-group\">\r\n          <label htmlFor=\"date\">StartDatum</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            id=\"startdatum\"\r\n            required\r\n            //value={this.state.name}\r\n            onChange={this.onChangeDate}\r\n            name=\"date\"\r\n          />\r\n        </div>\r\n        <div>\r\n        <select className ='selectField'\r\n        value={this.state.selectedCourse}\r\n        onChange={e => this.setState({selectedCourse: e.target.value, validationError: e.target.value === \"\" ? \"Wähle einen Kurs aus\" : \"\"})}\r\n        >\r\n        {this.state.courses.map((course, index) => \r\n        <option \r\n        key={index} value={course.title}>\r\n          {course.display}\r\n        </option>)}\r\n        </select>\r\n      <div style={{color: 'red', marginTop: '5px'}}>\r\n      {this.state.validationError}\r\n     </div>\r\n     </div>\r\n\r\n        <Link to=\"/FitnessplanAdmin\">\r\n          <button onClick={this.handleSubmit} className=\"button add add2\">\r\n            Submit\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}