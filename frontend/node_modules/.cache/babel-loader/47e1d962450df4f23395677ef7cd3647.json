{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melan\\\\Desktop\\\\React-Fitness-App\\\\frontend\\\\src\\\\Admin\\\\FitnessplanAdmin.js\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; //import { Button } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\"; //import  Modal  from 'react-bootstrap/Modal';\n//import ModalHeader from 'react-bootstrap/ModalHeader';\n//import ModalBody from 'react-bootstrap/ModalBody';\n//import ModalFooter from 'react-bootstrap/ModalFooter';\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport \"../Fitnessplan.css\";\nexport default class FitnessplanAdmin extends Component {\n  constructor(props) {\n    this._deleteCourse = this._deleteCourse.bind(this);\n    this.state = {\n      courses: [],\n      id: \"\",\n      date: \"\",\n      title: \"\",\n      calendarWeekends: true,\n      allDay: true,\n      calendarEvents: [// initial event data\n      {\n        name: \"Event Now\",\n        start: new Date()\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.loadEvents();\n  }\n\n  loadEvents() {\n    fetch(\"http://localhost:9000/api/courses\").then(response => response.json()).then(event => {\n      this.setState({\n        courses: event\n      });\n    });\n  }\n  /*componentDidUpdate(prevState) {\r\n    if (prevState.courses !== this.state.courses) {\r\n      this.loadEvents();\r\n    }\r\n  }*/\n\n\n  _deleteCourse(id) {\n    const {\n      courses\n    } = this.state;\n    fetch(\"http://localhost:9000/api/courses/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      this.setState({\n        courses: courses.filter(event => event.id !== id)\n      });\n      return;\n    }).catch(error => {\n      throw error;\n    }); //    fitness.preventDefault();\n\n    console.log(\"Deleted\");\n  }\n\n  render() {\n    //console.log(this.state.date);\n    var start = this.state.date;\n    console.log(this.state.title); //console.log(start.toISOString());\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitnessplan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Kurs bearbeiten\")), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, \" Kursname: \", this.state.title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \" Datum: \", this.state.date, \" \"))), /*#__PURE__*/React.createElement(ModalFooter, {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"edit-link\",\n      to: {\n        pathname: \"/EditCourseDate/\" + this.state.id,\n        state: {//date: this.state.event.date,\n          // name: this.state.event.title,\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button edit mrg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"button delete mrg\",\n      variant: \"danger\",\n      onClick: () => this._deleteCourse(this.state.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"button cancel mrg\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, \"Kursplan\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, \"Klicke auf ein Datum, um einen neuen Kurs hinzuzuf\\xFCgen\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Ohne Wochenenden\"), \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"create-link\",\n      to: \"/AddCourseDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, \"Add\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitness-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,dayGridWeek,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin] // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\n      // eventContent={this.renderEventContent}\n      // eventDrop={this.handleEventDrop}\n      // eventClick={this.handleEventClick}\n      // select={this.handleDateSelect}\n      //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\n      ,\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends //events={this.state.calendarEvents}\n      ,\n      events: this.state.courses //Funktioniert theoretisch.\n      ,\n      dateClick: this.handleDateClick,\n      onDelete: this.handleDelete,\n      eventClick: this.handleEventClick,\n      height: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    })));\n  }\n  /*handleDateClick = (arg) => {\r\n    if (\r\n      window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\r\n    ) {\r\n      this.setState({\r\n        // add new event data\r\n        courses: this.state.courses.concat({\r\n          // creates a new array\r\n          title: \"New Event\",\r\n          start: arg.date,\r\n          end: \"2020-09-19\",\r\n          allDay: arg.allDay,\r\n        }),\r\n      });\r\n    }\r\n  };*/\n\n\n}","map":{"version":3,"sources":["C:/Users/melan/Desktop/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Link","Button","Modal","ModalHeader","ModalBody","ModalFooter","FitnessplanAdmin","constructor","props","_deleteCourse","bind","state","courses","id","date","title","calendarWeekends","allDay","calendarEvents","name","start","Date","componentDidMount","loadEvents","fetch","then","response","json","event","setState","method","headers","Accept","filter","catch","error","console","log","render","modal","pathname","toggle","toggleWeekends","left","center","right","calendarComponentRef","handleDateClick","handleDelete","handleEventClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n//import { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n//import  Modal  from 'react-bootstrap/Modal';\r\n//import ModalHeader from 'react-bootstrap/ModalHeader';\r\n//import ModalBody from 'react-bootstrap/ModalBody';\r\n//import ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport \"../Fitnessplan.css\";\r\n\r\nexport default class FitnessplanAdmin extends Component {\r\n  calendarComponentRef = React.createRef();\r\n  constructor(props) {\r\n    this._deleteCourse = this._deleteCourse.bind(this);\r\n\r\n    this.state = {\r\n      courses: [],\r\n      id: \"\",\r\n      date: \"\",\r\n      title: \"\",\r\n\r\n      calendarWeekends: true,\r\n      allDay: true,\r\n      calendarEvents: [\r\n        // initial event data\r\n        { name: \"Event Now\", start: new Date() },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadEvents();\r\n  }\r\n\r\n  loadEvents() {\r\n    fetch(\"http://localhost:9000/api/courses\")\r\n      .then((response) => response.json())\r\n      .then((event) => {\r\n        this.setState({ courses: event });\r\n      });\r\n  }\r\n\r\n  /*componentDidUpdate(prevState) {\r\n    if (prevState.courses !== this.state.courses) {\r\n      this.loadEvents();\r\n    }\r\n  }*/\r\n\r\n  _deleteCourse(id) {\r\n    const { courses } = this.state;\r\n    fetch(\"http://localhost:9000/api/courses/\" + id, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(() => {\r\n        this.setState({\r\n          courses: courses.filter((event) => event.id !== id),\r\n        });\r\n        return;\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    //    fitness.preventDefault();\r\n\r\n    console.log(\"Deleted\");\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  };\r\n\r\n  handleEventClick = ({ event }) => {\r\n    this.toggle();\r\n    const date = event.start.toISOString().substr(0, 10);\r\n    this.setState({ date: date, title: event.title, id: event.id });\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.state.date);\r\n    var start = this.state.date;\r\n    console.log(this.state.title);\r\n    //console.log(start.toISOString());\r\n    return (\r\n      <div className=\"fitnessplan\">\r\n        <Modal isOpen={this.state.modal} className=\"modal\">\r\n          <ModalHeader className=\"modal-header\">\r\n            <p>Kurs bearbeiten</p>\r\n          </ModalHeader>\r\n          <ModalBody className=\"modal-body\">\r\n            <div>\r\n              <p> Kursname: {this.state.title} </p>\r\n              <p> Datum: {this.state.date} </p>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter className=\"modal-footer\">\r\n            <Link\r\n              className=\"edit-link\"\r\n              to={{\r\n                pathname: \"/EditCourseDate/\" + this.state.id,\r\n                state: {\r\n                  //date: this.state.event.date,\r\n                  // name: this.state.event.title,\r\n                },\r\n              }}\r\n            >\r\n              <Button className=\"button edit mrg\">Edit</Button>\r\n            </Link>\r\n            <Button\r\n              className=\"button delete mrg\"\r\n              variant=\"danger\"\r\n              onClick={() => this._deleteCourse(this.state.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button className=\"button cancel mrg\" onClick={this.toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <div className=\"heading\">\r\n          Kursplan\r\n          <div className=\"heading sub\">\r\n            Klicke auf ein Datum, um einen neuen Kurs hinzuzufügen\r\n          </div>\r\n          <div>\r\n            <button onClick={this.toggleWeekends} className=\"button add\">\r\n              Ohne Wochenenden\r\n            </button>\r\n            &nbsp;\r\n            {/* <button onClick={this.gotoPast}>go to a date in the past</button> */}\r\n          </div>\r\n          <div>\r\n            <Link className=\"create-link\" to={\"/AddCourseDate\"}>\r\n              <Button className=\"button add\">Add</Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"fitness-calendar\">\r\n          <FullCalendar\r\n            defaultView=\"dayGridMonth\"\r\n            header={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,dayGridWeek,listWeek\",\r\n            }}\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\r\n            // eventContent={this.renderEventContent}\r\n            // eventDrop={this.handleEventDrop}\r\n            // eventClick={this.handleEventClick}\r\n            // select={this.handleDateSelect}\r\n            //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\r\n            ref={this.calendarComponentRef}\r\n            weekends={this.state.calendarWeekends}\r\n            //events={this.state.calendarEvents}\r\n            events={this.state.courses} //Funktioniert theoretisch.\r\n            dateClick={this.handleDateClick}\r\n            onDelete={this.handleDelete}\r\n            eventClick={this.handleEventClick}\r\n            height=\"parent\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleWeekends = () => {\r\n    this.setState({\r\n      // update a property\r\n      calendarWeekends: !this.state.calendarWeekends,\r\n    });\r\n  };\r\n\r\n  gotoPast = () => {\r\n    let calendarApi = this.calendarComponentRef.current.getApi();\r\n    calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\r\n  };\r\n\r\n  /*handleDateClick = (arg) => {\r\n    if (\r\n      window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\r\n    ) {\r\n      this.setState({\r\n        // add new event data\r\n        courses: this.state.courses.concat({\r\n          // creates a new array\r\n          title: \"New Event\",\r\n          start: arg.date,\r\n          end: \"2020-09-19\",\r\n          allDay: arg.allDay,\r\n        }),\r\n      });\r\n    }\r\n  };*/\r\n}\r\n"]},"metadata":{},"sourceType":"module"}