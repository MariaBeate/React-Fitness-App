{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../Fitnessplan.css\";\nexport default class FitnessplanAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.handleEventClick = function () {\n      var event = calendar.getEventById(course.id);\n      alert(\"Are You Remove Event \" + event.title);\n      event.remove();\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n        this.setState({\n          // add new event data\n          courses: this.state.courses.concat({\n            // creates a new array\n            title: \"New Event\",\n            start: arg.date,\n            end: \"2020-09-19\",\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n\n    this.state = {\n      courses: [],\n      course: {\n        title: \"\",\n        date: \"\"\n      },\n      calendarWeekends: true,\n      allDay: true,\n      calendarEvents: [// initial event data\n      {\n        name: \"Event Now\",\n        start: new Date()\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/courses\").then(response => response.json()).then(course => {\n      this.setState({\n        courses: course\n      });\n    });\n  }\n\n  render() {\n    const {\n      courses\n    } = this.state;\n    console.log(courses);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitnessplan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Kursplan\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Klicke auf ein Datum, um einen neuen Kurs hinzuzuf\\xFCgen\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Ohne Wochenenden\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      id: \"btn-delete-event\",\n      class: \"btn btn-danger mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Click Remove Event\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"create-link\",\n      to: \"/AddCourseDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Add\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fitness-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      eventClick: this.handleEventClick,\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,dayGridWeek,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin] // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\n      // eventContent={this.renderEventContent}\n      // eventDrop={this.handleEventDrop}\n      // eventClick={this.handleEventClick}\n      // select={this.handleDateSelect}\n      //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\n      ,\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends //events={this.state.calendarEvents}\n      ,\n      events: this.state.courses //Funktioniert theoretisch. \n      ,\n      dateClick: this.handleDateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  } // handleEventClick = (info) => {\n  //   alert('Event: ' + info.event.name);\n  // }\n  // handleDateClick = (selectInfo) => {\n  //   let name = prompt('Please enter a new name for your event')\n  //   let calendarApi = selectInfo.view.calendar\n  //   //calendarApi.unselect() // clear date selection\n  //   if (name) {\n  //     calendarApi.addEvent({\n  //       id:\"\",\n  //       name,\n  //       start: selectInfo.startStr,\n  //       end: selectInfo.endStr,\n  //       allDay: selectInfo.allDay\n  //     })\n  //   }\n  // }\n  // renderEventContent(eventInfo) {\n  //   return (\n  //     <>\n  //       <b>{\"hey\"}</b>\n  //       <i>{\"hu\"}</i>\n  //     </>\n  //   )\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/Admin/FitnessplanAdmin.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Button","Link","FitnessplanAdmin","constructor","props","calendarComponentRef","createRef","handleEventClick","event","calendar","getEventById","course","id","alert","title","remove","toggleWeekends","setState","calendarWeekends","state","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","window","confirm","dateStr","courses","concat","start","date","end","allDay","calendarEvents","name","Date","componentDidMount","fetch","then","response","json","render","console","log","left","center","right"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Fitnessplan.css\";\r\n\r\nexport default class FitnessplanAdmin extends Component {\r\ncalendarComponentRef = React.createRef();\r\nconstructor(props) {\r\nsuper(props);\r\nthis.state = {\r\n    courses: [],\r\n    course: {\r\n      title: \"\",\r\n      date:\"\",\r\n    },\r\n    calendarWeekends: true,\r\n    allDay: true,\r\n    calendarEvents: [\r\n      // initial event data\r\n      { name: \"Event Now\", start: new Date() },\r\n    ],\r\n  };\r\n}\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/api/courses\")\r\n      .then((response) => response.json())\r\n      .then((course) => {\r\n        this.setState({ courses: course });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const{ courses } = this.state;\r\n    console.log(courses)\r\n    return (\r\n      <div className=\"fitnessplan\">\r\n        <div className=\"heading\">\r\n        Kursplan\r\n        <div className=\"heading sub\">\r\n        Klicke auf ein Datum, um einen neuen Kurs hinzuzufügen\r\n        </div>\r\n        <div>\r\n        <button onClick={this.toggleWeekends} className=\"button add\" >Ohne Wochenenden</button>&nbsp;\r\n        <button id=\"btn-delete-event\" class=\"btn btn-danger mb-2\">Click Remove Event</button> \r\n          {/* <button onClick={this.gotoPast}>go to a date in the past</button> */}\r\n        </div>\r\n        <div>\r\n          <Link className=\"create-link\" to={\"/AddCourseDate\"}>\r\n            <Button className=\"button add\">Add</Button>\r\n          </Link>\r\n        </div>\r\n        </div>\r\n        <div className=\"fitness-calendar\">\r\n          <FullCalendar\r\n            defaultView=\"dayGridMonth\"\r\n            eventClick= {this.handleEventClick}\r\n            header={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,dayGridWeek,listWeek\",\r\n            }}\r\n            \r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            // editable={true}  //change length of event by dragging the event down. Change day of event by dragging\r\n            // eventContent={this.renderEventContent}\r\n            // eventDrop={this.handleEventDrop}\r\n            // eventClick={this.handleEventClick}\r\n            // select={this.handleDateSelect}\r\n            //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\r\n            ref={this.calendarComponentRef}\r\n            weekends={this.state.calendarWeekends}\r\n            //events={this.state.calendarEvents}\r\n            events={this.state.courses}    //Funktioniert theoretisch. \r\n            dateClick={this.handleDateClick}\r\n\r\n            \r\n            \r\n \r\n          />\r\n        </div>\r\n       </div>\r\n    );\r\n  }\r\n\r\n  // handleEventClick = (info) => {\r\n  //   alert('Event: ' + info.event.name);\r\n  // }\r\n\r\n  // handleDateClick = (selectInfo) => {\r\n  //   let name = prompt('Please enter a new name for your event')\r\n  //   let calendarApi = selectInfo.view.calendar\r\n\r\n  //   //calendarApi.unselect() // clear date selection\r\n\r\n  //   if (name) {\r\n  //     calendarApi.addEvent({\r\n  //       id:\"\",\r\n  //       name,\r\n  //       start: selectInfo.startStr,\r\n  //       end: selectInfo.endStr,\r\n  //       allDay: selectInfo.allDay\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // renderEventContent(eventInfo) {\r\n  //   return (\r\n  //     <>\r\n  //       <b>{\"hey\"}</b>\r\n  //       <i>{\"hu\"}</i>\r\n  //     </>\r\n  //   )\r\n  // }\r\n  \r\n handleEventClick =(function(){\r\n    var event = calendar.getEventById(course.id);\r\n    alert(\"Are You Remove Event \" + event.title);\r\n    event.remove();\r\n    });\r\n\r\n  toggleWeekends = () => {\r\n    this.setState({\r\n      // update a property\r\n      calendarWeekends: !this.state.calendarWeekends,\r\n    });\r\n  };\r\n\r\n  gotoPast = () => {\r\n    let calendarApi = this.calendarComponentRef.current.getApi();\r\n    calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\r\n  };\r\n\r\n handleDateClick = (arg) => {\r\n    if (\r\n      window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\r\n    ) {\r\n      this.setState({\r\n        // add new event data\r\n        courses: this.state.courses.concat({\r\n          // creates a new array\r\n          title: \"New Event\",\r\n          start: arg.date,\r\n          end: \"2020-09-19\",\r\n          allDay: arg.allDay,\r\n        }),\r\n      });\r\n    }\r\n  }; \r\n}\r\n"]},"metadata":{},"sourceType":"module"}