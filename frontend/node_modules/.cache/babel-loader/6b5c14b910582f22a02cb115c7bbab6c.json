{"ast":null,"code":"// import React, { Component } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\n// import interactionPlugin from \"@fullcalendar/interaction\";\n// import \"../Fitnessplan.css\";\n// export default class FitnessplanAdmin extends Component {\n//   calendarComponentRef = React.createRef();\n//   state = {\n//     courses: [],\n//     calendarWeekends: true,\n//     calendarEvents: [\n//       // initial event data\n//       { name: \"Event Now\", start: new Date() },\n//     ],\n//   };\n//   componentDidMount() {\n//     fetch(\"http://localhost:9000/api/fitness\")\n//       .then((response) => response.json())\n//       .then((course) => {\n//         this.setState({ courses: course });\n//       });\n//   }\n//   render() {\n//     const{ courses } = this.state;\n//     console.log(courses)\n//     return (\n//       <div className=\"fitnessplan\">\n//       <div className=\"heading\">\n//       Kursplan\n//       </div>\n//         <div className=\"fitness-calendar\">\n//         <FullCalendar\n//           defaultView=\"timeGridWeek\"\n//           header={{\n//             left: \"prev,next today\",\n//             center: \"name\",\n//             right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n//           }}\n//           plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n//           editable={true}  //change length of event by dragging the event down. Change day of event by dragging\n//           eventContent={this.renderEventContent}\n//           eventDrop={this.handleEventDrop}\n//           eventClick={this.handleEventClick}\n//           select={this.handleDateSelect}\n//           //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\n//           ref={this.calendarComponentRef}\n//           weekends={this.state.calendarWeekends}\n//           //events={this.state.calendarEvents}\n//           events={courses}    //Funktioniert theoretisch. \n//           dateClick={this.handleDateClick}\n//         />\n//       </div>\n//      </div>\n//   );\n// }\n// handleEventClick = (info) => {\n//   alert('Event: ' + info.event.name);\n// }\n// handleDateClick = (selectInfo) => {\n//   let name = prompt('Please enter a new name for your event')\n//   let calendarApi = selectInfo.view.calendar\n//   //calendarApi.unselect() // clear date selection\n//   if (name) {\n//     calendarApi.addEvent({\n//       id:\"\",\n//       name,\n//       start: selectInfo.startStr,\n//       end: selectInfo.endStr,\n//       allDay: selectInfo.allDay\n//     })\n//   }\n// }\n// renderEventContent(eventInfo) {\n//   return (\n//     <>\n//       <b>{\"hey\"}</b>\n//       <i>{\"hu\"}</i>\n//     </>\n//   )\n// }\n// toggleWeekends = () => {\n//   this.setState({\n//     // update a property\n//     calendarWeekends: !this.state.calendarWeekends,\n//   });\n// };\n// gotoPast = () => {\n//   let calendarApi = this.calendarComponentRef.current.getApi();\n//   calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n// };\n// /* handleDateClick = (arg) => {\n//   if (\n//     window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\n//   ) {\n//     this.setState({\n//       // add new event data\n//       calendarEvents: this.state.calendarEvents.concat({\n//         // creates a new array\n//         name: \"New Event\",\n//         start: arg.date,\n//         allDay: arg.allDay,\n//       }),\n//     });\n//   }\n// }; */\n// }","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App/frontend/src/User/FitnessplanUser.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\n// import interactionPlugin from \"@fullcalendar/interaction\";\n// import \"../Fitnessplan.css\";\n\n// export default class FitnessplanAdmin extends Component {\n//   calendarComponentRef = React.createRef();\n//   state = {\n//     courses: [],\n//     calendarWeekends: true,\n//     calendarEvents: [\n//       // initial event data\n//       { name: \"Event Now\", start: new Date() },\n//     ],\n//   };\n\n//   componentDidMount() {\n//     fetch(\"http://localhost:9000/api/fitness\")\n//       .then((response) => response.json())\n//       .then((course) => {\n//         this.setState({ courses: course });\n//       });\n//   }\n\n//   render() {\n//     const{ courses } = this.state;\n//     console.log(courses)\n//     return (\n//       <div className=\"fitnessplan\">\n//       <div className=\"heading\">\n//       Kursplan\n//       </div>\n//         <div className=\"fitness-calendar\">\n//         <FullCalendar\n//           defaultView=\"timeGridWeek\"\n//           header={{\n//             left: \"prev,next today\",\n//             center: \"name\",\n//             right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n//           }}\n//           plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n//           editable={true}  //change length of event by dragging the event down. Change day of event by dragging\n//           eventContent={this.renderEventContent}\n//           eventDrop={this.handleEventDrop}\n//           eventClick={this.handleEventClick}\n//           select={this.handleDateSelect}\n//           //eventClick = {function(calendarEvents, jsEvent, view, resourceObj) {alert(courses.name)}}\n//           ref={this.calendarComponentRef}\n//           weekends={this.state.calendarWeekends}\n//           //events={this.state.calendarEvents}\n//           events={courses}    //Funktioniert theoretisch. \n//           dateClick={this.handleDateClick}\n          \n\n//         />\n//       </div>\n//      </div>\n//   );\n// }\n\n// handleEventClick = (info) => {\n//   alert('Event: ' + info.event.name);\n// }\n\n// handleDateClick = (selectInfo) => {\n//   let name = prompt('Please enter a new name for your event')\n//   let calendarApi = selectInfo.view.calendar\n\n//   //calendarApi.unselect() // clear date selection\n\n//   if (name) {\n//     calendarApi.addEvent({\n//       id:\"\",\n//       name,\n//       start: selectInfo.startStr,\n//       end: selectInfo.endStr,\n//       allDay: selectInfo.allDay\n//     })\n//   }\n// }\n\n// renderEventContent(eventInfo) {\n//   return (\n//     <>\n//       <b>{\"hey\"}</b>\n//       <i>{\"hu\"}</i>\n//     </>\n//   )\n// }\n\n// toggleWeekends = () => {\n//   this.setState({\n//     // update a property\n//     calendarWeekends: !this.state.calendarWeekends,\n//   });\n// };\n\n// gotoPast = () => {\n//   let calendarApi = this.calendarComponentRef.current.getApi();\n//   calendarApi.gotoDate(\"2020-01-01\"); // call a method on the Calendar object\n// };\n\n// /* handleDateClick = (arg) => {\n//   if (\n//     window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")\n//   ) {\n//     this.setState({\n//       // add new event data\n//       calendarEvents: this.state.calendarEvents.concat({\n//         // creates a new array\n//         name: \"New Event\",\n//         start: arg.date,\n//         allDay: arg.allDay,\n//       }),\n//     });\n//   }\n// }; */\n// }"]},"metadata":{},"sourceType":"module"}