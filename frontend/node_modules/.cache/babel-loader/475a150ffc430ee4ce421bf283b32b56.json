{"ast":null,"code":"var _jsxFileName = \"/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App-1/frontend/src/User/FitnessplanUser.js\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"../assets/css/Fitnessplan.css\";\n\nfunction searchingFor(search) {\n  return function (x) {\n    return x.title.toLowerCase().includes(search.toLowerCase()) || !search;\n  };\n}\n\nexport default class FitnessplanUser extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.customEventRender = info => {\n      // return info.el\n      info.el.event = \"custom-event-container fc-day-grid-event fc-h-event fc-event fc-start fc-end\"; // edit the child's class\n      //info.el.children[0].className = \"custom-event-container fc-content\"\n\n      return info.el;\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.state = {\n      courses: [],\n      search: \"\",\n      event: {\n        id: \"\",\n        date: \"\",\n        title: \"\",\n        showModal1: false,\n        response: {}\n      },\n      calendarWeekends: true,\n      allDay: true,\n      en: false\n    };\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  searchHandler(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/courses\").then(response => response.json()).then(event => {\n      this.setState({\n        courses: event\n      });\n    });\n  }\n\n  render() {\n    const {\n      search,\n      courses\n    } = this.state;\n    console.log(this.props.en);\n\n    if (!this.props.en) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fitnessplan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, \"Kursplan\", /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleWeekends,\n        className: \"button add mrg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, \"Ohne Wochenenden\"), \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchFilter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.searchHandler,\n        value: search,\n        placeholder: \"Kurs suchen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fitness-calendar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FullCalendar, {\n        defaultView: \"dayGridMonth\",\n        header: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,dayGridWeek,listWeek\"\n        },\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        ref: this.calendarComponentRef,\n        weekends: this.state.calendarWeekends,\n        events: this.state.courses,\n        eventRender: this.customEventRender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, courses.filter(searchingFor(search)).map(event => /*#__PURE__*/React.createElement(\"tr\", {\n        key: event.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, event.title, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }, event.date, \" \"))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fitnessplan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, \"Course Table\", /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleWeekends,\n        className: \"button add mrg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, \"Without Weekends\"), \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchFilter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.searchHandler,\n        value: search,\n        placeholder: \"Search Course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fitness-calendar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FullCalendar, {\n        defaultView: \"dayGridMonth\",\n        header: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,dayGridWeek,listWeek\"\n        },\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        ref: this.calendarComponentRef,\n        weekends: this.state.calendarWeekends,\n        events: this.state.courses,\n        eventRender: this.customEventRender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, courses.filter(searchingFor(search)).map(event => /*#__PURE__*/React.createElement(\"tr\", {\n        key: event.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, event.title, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }, event.date, \" \"))))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/katharina/Desktop/Webmo_Melli/React-Fitness-App-1/frontend/src/User/FitnessplanUser.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","searchingFor","search","x","title","toLowerCase","includes","FitnessplanUser","constructor","props","calendarComponentRef","createRef","customEventRender","info","el","event","toggleWeekends","setState","calendarWeekends","state","courses","id","date","showModal1","response","allDay","en","searchHandler","bind","target","value","componentDidMount","fetch","then","json","render","console","log","left","center","right","filter","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"../assets/css/Fitnessplan.css\";\n\nfunction searchingFor(search) {\n  return function (x) {\n    return x.title.toLowerCase().includes(search.toLowerCase()) || !search;\n  }\n}\n\nexport default class FitnessplanUser extends Component {\n  calendarComponentRef = React.createRef();\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      courses: [],\n      search: \"\",\n      event: {\n        id: \"\",\n        date: \"\",\n        title: \"\",\n        showModal1: false,\n        response: {},\n      },\n      calendarWeekends: true,\n      allDay: true,\n      en: false,\n    };\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  searchHandler(event) {\n    this.setState({ search: event.target.value })\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/api/courses\")\n      .then((response) => response.json())\n      .then((event) => {\n        this.setState({ courses: event });\n      });\n  }\n\n  render() {\n    const { search, courses } = this.state;\n    console.log(this.props.en)\n    if (!this.props.en) {\n      return (\n        <div className=\"fitnessplan\">\n          <div className=\"heading\">\n            Kursplan\n          <div>\n              <button onClick={this.toggleWeekends} className=\"button add mrg\">\n                Ohne Wochenenden\n            </button>\n            &nbsp;\n          </div>\n            <div className=\"searchFilter\">\n              <form>\n                <input type=\"text\"\n                  onChange={this.searchHandler}\n                  value={search}\n                  placeholder=\"Kurs suchen\"\n                />\n              </form>\n            </div>\n          </div>\n\n          <div className=\"fitness-calendar\">\n            <FullCalendar\n              defaultView=\"dayGridMonth\"\n              header={{\n                left: \"prev,next today\",\n                center: \"title\",\n                right: \"dayGridMonth,dayGridWeek,listWeek\",\n              }}\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n              ref={this.calendarComponentRef}\n              weekends={this.state.calendarWeekends}\n              events={this.state.courses}\n              eventRender={this.customEventRender}\n            />\n\n            <tbody>\n              {courses.filter(searchingFor(search)).map((event) => (\n                <tr key={event.id}>\n                  <td>{event.title} </td>\n                  <td>{event.date} </td>\n                </tr>\n              ))}\n            </tbody>\n          </div>\n\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"fitnessplan\">\n          <div className=\"heading\">\n            Course Table\n          <div>\n              <button onClick={this.toggleWeekends} className=\"button add mrg\">\n                Without Weekends\n            </button>\n            &nbsp;\n          </div>\n            <div className=\"searchFilter\">\n              <form>\n                <input type=\"text\"\n                  onChange={this.searchHandler}\n                  value={search}\n                  placeholder=\"Search Course\"\n                />\n              </form>\n            </div>\n          </div>\n\n          <div className=\"fitness-calendar\">\n            <FullCalendar\n              defaultView=\"dayGridMonth\"\n              header={{\n                left: \"prev,next today\",\n                center: \"title\",\n                right: \"dayGridMonth,dayGridWeek,listWeek\",\n              }}\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n              ref={this.calendarComponentRef}\n              weekends={this.state.calendarWeekends}\n              events={this.state.courses}\n              eventRender={this.customEventRender}\n            />\n\n            <tbody>\n              {courses.filter(searchingFor(search)).map((event) => (\n                <tr key={event.id}>\n                  <td>{event.title} </td>\n                  <td>{event.date} </td>\n                </tr>\n              ))}\n            </tbody>\n          </div>\n\n        </div>\n      );\n    }\n  }\n\n  customEventRender = info => {\n    // return info.el\n    info.el.event = \"custom-event-container fc-day-grid-event fc-h-event fc-event fc-start fc-end\"\n    // edit the child's class\n    //info.el.children[0].className = \"custom-event-container fc-content\"\n    return info.el\n  };\n\n  toggleWeekends = () => {\n    this.setState({\n      // update a property\n      calendarWeekends: !this.state.calendarWeekends,\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}